;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name hipo.dom, :imports nil, :requires nil, :uses nil, :defs {replace-text! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 37, :column 7, :end-line 37, :end-column 20, :arglists (quote ([el s]))}, :name hipo.dom/replace-text!, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 20, :method-params ([el s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el s]))}, text-element? {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 9, :column 8, :end-line 9, :end-column 21, :private true, :arglists (quote ([el]))}, :private true, :name hipo.dom/text-element?, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 21, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, insert-child-at! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([el i nel]))}, :name hipo.dom/insert-child-at!, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 23, :method-params ([el i nel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 3, :fn-var true, :arglists (quote ([el i nel]))}, children {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([el] [el i])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([el] [el i]), :arglists ([el] [el i]), :arglists-meta (nil nil)}}, :name hipo.dom/children, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([el] [el i]), :arglists ([el] [el i]), :arglists-meta (nil nil)}, :method-params ([el] [el i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists ([el] [el i])}, remove-trailing-children! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 49, :column 7, :end-line 49, :end-column 32, :arglists (quote ([el n]))}, :name hipo.dom/remove-trailing-children!, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 32, :method-params ([el n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el n]))}, element? {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 8, :column 8, :end-line 8, :end-column 16, :private true, :arglists (quote ([el]))}, :private true, :name hipo.dom/element?, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 16, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, child-at {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([el i]))}, :name hipo.dom/child-at, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 15, :method-params ([el i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el i]))}, clear! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 44, :column 7, :end-line 44, :end-column 13, :arglists (quote ([el]))}, :name hipo.dom/clear!, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 13, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, replace! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([el nel]))}, :name hipo.dom/replace!, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 15, :method-params ([el nel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el nel]))}, create-element {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/public/js/hipo/dom.cljs", :line 3, :column 7, :end-line 3, :end-column 21, :arglists (quote ([namespace-uri tag]))}, :name hipo.dom/create-element, :variadic false, :file "public/js/hipo/dom.cljs", :end-column 21, :method-params ([namespace-uri tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([namespace-uri tag]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{i :pre nel neg? el element? .-parentElement n nil? not}, :order [element? el not neg? i nel nil? .-parentElement :pre n]}, :doc nil}