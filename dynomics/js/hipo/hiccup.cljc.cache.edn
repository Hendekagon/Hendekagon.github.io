;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name hipo.hiccup, :imports nil, :requires {f hipo.fast, hipo.fast hipo.fast}, :uses nil, :defs {tag {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 53, :column 7, :end-line 53, :end-column 10, :arglists (quote ([v]))}, :name hipo.hiccup/tag, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 10, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, parse-id {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 24, :column 7, :end-line 24, :end-column 15, :arglists (quote ([s]))}, :name hipo.hiccup/parse-id, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, tag->ns {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 9, :column 7, :end-line 9, :end-column 14, :arglists (quote ([s]))}, :name hipo.hiccup/tag->ns, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 14, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, attributes {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 57, :column 7, :end-line 57, :end-column 17, :arglists (quote ([v]))}, :name hipo.hiccup/attributes, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 17, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, id-separator {:name hipo.hiccup/id-separator, :file "public/js/hipo/hiccup.cljc", :line 6, :column 1, :end-line 6, :end-column 28, :private true, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 6, :column 16, :end-line 6, :end-column 28, :private true}}, children {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 72, :column 7, :end-line 72, :end-column 15, :arglists (quote ([v]))}, :name hipo.hiccup/children, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, parse-classes {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 33, :column 7, :end-line 33, :end-column 20, :arglists (quote ([s]))}, :name hipo.hiccup/parse-classes, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, svg-tags {:name hipo.hiccup/svg-tags, :file "public/js/hipo/hiccup.cljc", :line 5, :column 1, :end-line 5, :end-column 24, :private true, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 5, :column 16, :end-line 5, :end-column 24, :private true}}, flatten-children {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 92, :column 7, :end-line 92, :end-column 23, :arglists (quote ([v]))}, :name hipo.hiccup/flatten-children, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 23, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, parse-tag-name {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 14, :column 7, :end-line 14, :end-column 21, :arglists (quote ([s]))}, :name hipo.hiccup/parse-tag-name, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 21, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, listener-name->event-name {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 114, :column 7, :end-line 114, :end-column 32, :arglists (quote ([s]))}, :name hipo.hiccup/listener-name->event-name, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 32, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, node {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 49, :column 7, :end-line 49, :end-column 11, :arglists (quote ([v]))}, :name hipo.hiccup/node, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 11, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, literal? {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 45, :column 7, :end-line 45, :end-column 15, :arglists (quote ([o]))}, :name hipo.hiccup/literal?, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 15, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, svg-ns {:name hipo.hiccup/svg-ns, :file "public/js/hipo/hiccup.cljc", :line 4, :column 1, :end-line 4, :end-column 22, :private true, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 4, :column 16, :end-line 4, :end-column 22, :private true}}, class-separator {:name hipo.hiccup/class-separator, :file "public/js/hipo/hiccup.cljc", :line 7, :column 1, :end-line 7, :end-column 31, :private true, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 7, :column 16, :end-line 7, :end-column 31, :private true}}, listener-name? {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 109, :column 7, :end-line 109, :end-column 21, :arglists (quote ([s]))}, :name hipo.hiccup/listener-name?, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 21, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, flattened? {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/hipo/hiccup.cljc", :line 78, :column 7, :end-line 78, :end-column 17, :arglists (quote ([v]))}, :name hipo.hiccup/flattened?, :variadic false, :file "public/js/hipo/hiccup.cljc", :end-column 17, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{vector? v or nil? :id :class s listener-name?}, :order [:id :class or nil? v vector? listener-name? s]}, :doc nil}