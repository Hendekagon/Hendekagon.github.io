;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name dynomics.ui.persistence, :imports nil, :requires {dc dynomics.space.core, dynomics.space.core dynomics.space.core, t cognitect.transit, cognitect.transit cognitect.transit}, :uses nil, :defs {filter-state {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/persistence.cljs", :line 9, :column 7, :end-line 9, :end-column 19, :arglists (quote ([state]))}, :name dynomics.ui.persistence/filter-state, :variadic false, :file "src/dynomics/ui/persistence.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, merge-state {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/persistence.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([state ps]))}, :name dynomics.ui.persistence/merge-state, :variadic false, :file "src/dynomics/ui/persistence.cljs", :end-column 18, :method-params ([state ps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state ps]))}, persist! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/persistence.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([state]))}, :name dynomics.ui.persistence/persist!, :variadic false, :file "src/dynomics/ui/persistence.cljs", :end-column 15, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, get-state! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/persistence.cljs", :line 26, :column 7, :end-line 26, :end-column 17, :arglists (quote ([state]))}, :name dynomics.ui.persistence/get-state!, :variadic false, :file "src/dynomics/ui/persistence.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:space :history :graph :action :json}, :order [:space :action :graph :history :json]}, :doc "This namespace provides functions for saving\n  and loading the state of the application to&from\n  localstorage"}