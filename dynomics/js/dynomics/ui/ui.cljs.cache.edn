;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.ui.ui, :imports nil, :requires {hipo.core hipo.core, gtypes garden.types, dom om.dom, ps dynomics.ui.persistence, hipo hipo.core, cljs.tools.reader cljs.tools.reader, dynomics.ui.css dynomics.ui.css, async cljs.core.async, garden.types garden.types, clojure.browser.repl clojure.browser.repl, dommy dommy.core, cljs.js cljs.js, rc dynomics.ui.core, om.dom om.dom, dc dynomics.space.core, color garden.color, cljs.core.async cljs.core.async, m dynomics.ui.messaging, dynomics.ui.core dynomics.ui.core, dynomics.ui.messaging dynomics.ui.messaging, uicss dynomics.ui.css, om.core om.core, garden.color garden.color, dommy.core dommy.core, canvg canvg, om om.core, du dynomics.space.ui, goog.style goog.style, dynomics.space.ui dynomics.space.ui, dynomics.ui.persistence dynomics.ui.persistence, repl clojure.browser.repl, dynomics.space.core dynomics.space.core, garden.core garden.core}, :uses {input om.dom, rect om.dom, a om.dom, span om.dom, eval cljs.js, empty-state cljs.js, circle om.dom, css garden.core, rgb garden.color, hsl garden.color, canvas om.dom, div om.dom, round dynomics.space.core, g om.dom, hex->rgb garden.color, read-string cljs.tools.reader, js-eval cljs.js, svg om.dom, put! cljs.core.async}, :defs {->t_dynomics$ui$ui207812 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta207813])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207812, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta207813]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 462, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta207813])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-browser-info {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 221, :column 7, :end-line 221, :end-column 23, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-browser-info, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, make-function-selector-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 86, :column 7, :end-line 86, :end-column 34, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, :name dynomics.ui.ui/make-function-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 34, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, add-messaging {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 218, :column 7, :end-line 218, :end-column 20, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-messaging, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, main-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 480, :column 7, :end-line 480, :end-column 16, :arglists (quote ([]))}, :name dynomics.ui.ui/main-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 480, :end-line 480, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t_dynomics$ui$ui207658 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207658, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 152, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui207824 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta207825])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207824, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta207825]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 482, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta207825])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, mousemoves {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([state]))}, :name dynomics.ui.ui/mousemoves, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, select-node {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 227, :column 7, :end-line 227, :end-column 18, :arglists (quote ([s path mp]))}, :name dynomics.ui.ui/select-node, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([s path mp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s path mp]))}, t_dynomics$ui$ui207653 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207653, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 152, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui207615 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207615, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui207644 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__207629 owner map__207640 state map__207641 state-updates sh meta207645])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207644, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__207629 owner map__207640 state map__207641 state-updates sh meta207645]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 9, :fn-var true, :arglists (quote ([make-history-selector-view p__207629 owner map__207640 state map__207641 state-updates sh meta207645])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-kb-path {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 199, :column 7, :end-line 199, :end-column 19, :arglists (quote ([kb]))}, :name dynomics.ui.ui/make-kb-path, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 19, :method-params ([kb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([kb]))}, ->t_dynomics$ui$ui207668 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__207661 map__207662 state map__207663 state-updates map__207664 last-result last-exps meta207669])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207668, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__207661 map__207662 state map__207663 state-updates map__207664 last-result last-exps meta207669]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 168, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__207661 map__207662 state map__207663 state-updates map__207664 last-result last-exps meta207669])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, animation-frame {:name dynomics.ui.ui/animation-frame, :file "src/dynomics/ui/ui.cljs", :line 37, :column 1, :end-line 37, :end-column 21, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 37, :column 6, :end-line 37, :end-column 21}}, evaluate {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 158, :column 7, :end-line 158, :end-column 15, :arglists (quote ([s sexp f]))}, :name dynomics.ui.ui/evaluate, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s sexp f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s sexp f]))}, be-first {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 225, :column 7, :end-line 225, :end-column 15, :arglists (quote ([s]))}, :name dynomics.ui.ui/be-first, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, ->t_dynomics$ui$ui207653 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__207650 map__207651 state logo-text app-name app-version meta207654])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207653, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__207650 map__207651 state logo-text app-name app-version meta207654]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 152, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__207650 map__207651 state logo-text app-name app-version meta207654])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, evt-to-keyword {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 62, :column 7, :end-line 62, :end-column 21, :arglists (quote ([e]))}, :name dynomics.ui.ui/evt-to-keyword, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, t_dynomics$ui$ui207634 {:num-fields 9, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207634, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui207824 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207824, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 482, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, keydown {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keydown, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 14, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, make-footer-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 166, :column 7, :end-line 166, :end-column 23, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, :name dynomics.ui.ui/make-footer-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__207661]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, is-modifier {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([keycode]))}, :name dynomics.ui.ui/is-modifier, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([keycode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keycode]))}, ->t_dynomics$ui$ui207817 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta207818])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207817, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta207818]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 482, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta207818])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui207615 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta207616])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207615, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta207616]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta207616])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, left-right-top-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 461, :column 7, :end-line 461, :end-column 26, :arglists (quote ([state]))}, :name dynomics.ui.ui/left-right-top-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 26, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, t_dynomics$ui$ui207622 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207622, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui207812 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207812, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 462, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-components {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 190, :column 7, :end-line 190, :end-column 21, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-components, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, set-current-tool {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 195, :column 7, :end-line 195, :end-column 23, :arglists (quote ([tool-key state]))}, :name dynomics.ui.ui/set-current-tool, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([tool-key state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tool-key state]))}, add-keybindings {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 204, :column 7, :end-line 204, :end-column 22, :arglists (quote ([state] [state tools])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/add-keybindings, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}, :method-params ([state] [state tools]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state tools])}, start {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 505, :column 7, :end-line 505, :end-column 12, :arglists (quote ([] [state])), :doc "Start the application!", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/start, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}, :method-params ([] [state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 505, :end-line 505, :max-fixed-arity 1, :fn-var true, :arglists ([] [state]), :doc "Start the application!"}, ->t_dynomics$ui$ui207807 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta207808])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207807, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta207808]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 462, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta207808])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui207644 {:num-fields 9, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207644, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui207677 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207677, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 168, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, parse-px {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 83, :column 7, :end-line 83, :end-column 15, :arglists (quote ([v]))}, :name dynomics.ui.ui/parse-px, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, t_dynomics$ui$ui207668 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207668, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 168, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui207807 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207807, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 462, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui207658 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__207650 map__207656 state logo-text app-name app-version meta207659])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207658, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__207650 map__207656 state logo-text app-name app-version meta207659]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 152, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__207650 map__207656 state logo-text app-name app-version meta207659])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-history-selector-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 110, :column 7, :end-line 110, :end-column 33, :arglists (quote ([{{:keys [state-updates]} :messaging, sh :show-history, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, :name dynomics.ui.ui/make-history-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 33, :method-params ([p__207629 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, sh :show-history, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, t_dynomics$ui$ui207817 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui207817, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 482, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-functions {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 234, :column 7, :end-line 234, :end-column 20, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, :name dynomics.ui.ui/add-functions, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, keyup {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keyup, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, ->t_dynomics$ui$ui207677 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__207661 map__207671 state map__207672 state-updates map__207673 last-result last-exps meta207678])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207677, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__207661 map__207671 state map__207672 state-updates map__207673 last-result last-exps meta207678]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 168, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__207661 map__207671 state map__207672 state-updates map__207673 last-result last-exps meta207678])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-events! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 72, :column 7, :end-line 72, :end-column 18, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-events!, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, isnt-modifier {:name dynomics.ui.ui/isnt-modifier, :file "src/dynomics/ui/ui.cljs", :line 52, :column 1, :end-line 52, :end-column 19, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 52, :column 6, :end-line 52, :end-column 19}}, ->t_dynomics$ui$ui207622 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta207623])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207622, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta207623]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta207623])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-header-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 149, :column 7, :end-line 149, :end-column 23, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, :name dynomics.ui.ui/make-header-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__207650]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, ->t_dynomics$ui$ui207634 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__207629 owner map__207630 state map__207631 state-updates sh meta207635])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui207634, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__207629 owner map__207630 state map__207631 state-updates sh meta207635]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 9, :fn-var true, :arglists (quote ([make-history-selector-view p__207629 owner map__207630 state map__207631 state-updates sh meta207635])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {hipo.core hipo.core, dom om.dom, hipo hipo.core, dommy dommy.core, cljs.js cljs.js, om.dom om.dom, color garden.color, om.core om.core, garden.color garden.color, dommy.core dommy.core, om om.core}, :cljs.analyzer/constants {:seen #{:y map__207672 :nothing sh :description :load :path p__207650 meta207818 :q :state-updates :move-offset last-exps :last-node-added make-function-selector-view meta207616 map__207641 :history-item p__207629 logo-text :space main-view :fn :desccription owner :screen :verb :key meta207654 :dont-record :pan-zoom :keydown :else p__207661 meta207669 :mouse-up :browser map__207651 state-updates map__207640 :name last-result :w :as :dt :remove-selected :tools :functions :width :move :mouse-position :history :mouse :deselect-all :keymap meta207635 :type :current-function :connect-nodes :minus :app-name :topic :state :icon map__207631 :save make-footer-view :component :unselect map__207656 :header :node-types :function left-right-top-view :mouse-down :enter map__207673 meta207659 :subscriptions :tools-order functions :g :keyup map__207671 :keys :event :dynomics :keycode :vx map__207662 :msgs :j :expr :vy :ui :result :h :messaging :function-selector :id app-name state :app-version meta207645 :cf :om-builder :source-map :context make-history-selector-view meta207678 :exps :position :d :f :action :error meta207623 :mouse-move :t :x :write-channel :target :show-history meta207813 :selected-nodes quote :arglists :version :query :keybinding :add :logo-text app-version :doc :handler map__207664 make-header-view :select-nodes :current-tool map__207630 :move-nodes meta207825 map__207663 :add-nodes :phase-space-node :message :height :select meta207808 :message-channel :eval}, :order [:key :keycode :event :keydown :keyup :ui :mouse :vx :vy :x :y :functions :function-selector :header :history :messaging :state-updates :name :description :fn :action :current-function :verb :type :id :select :function make-function-selector-view :arglists :doc quote state owner functions state-updates meta207616 meta207623 :show-history :version :history-item :dont-record :desccription make-history-selector-view :keys sh :as p__207629 map__207630 map__207631 meta207635 map__207640 map__207641 meta207645 :logo-text :app-name :app-version make-header-view logo-text app-name app-version p__207650 map__207651 meta207654 map__207656 meta207659 :eval :source-map :context :expr :result :exps :enter :error :message :state make-footer-view last-result last-exps p__207661 map__207662 map__207663 map__207664 meta207669 map__207671 map__207672 map__207673 meta207678 :subscriptions :dynomics :current-tool :keymap :tools :keybinding :browser :screen :width :height :space :selected-nodes :move-offset :om-builder :query :dt :tools-order :msgs :cf :component :pan-zoom :last-node-added :message-channel :write-channel :topic :handler :mouse-move :move-nodes :position :move :phase-space-node :mouse-down :path :mouse-up :unselect :add-nodes :mouse-position :add :connect-nodes :select-nodes :nothing :deselect-all :remove-selected :save :load :node-types :icon :w :minus :d :g :q :t :h :f :j left-right-top-view meta207808 meta207813 :else main-view meta207818 meta207825 :target]}, :doc "\n  Here is the main UI\n\n  It's built with Om/React for rendering state to the DOM\n  and core.asyc for user interaction, state updates\n  and IO\n\n  Everything is built in the browser including the CSS\n\n  "}