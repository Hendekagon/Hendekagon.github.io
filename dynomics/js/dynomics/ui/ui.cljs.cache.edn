;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.ui.ui, :imports nil, :requires {hipo.core hipo.core, gtypes garden.types, dom om.dom, ps dynomics.ui.persistence, hipo hipo.core, cljs.tools.reader cljs.tools.reader, dynomics.ui.css dynomics.ui.css, async cljs.core.async, garden.types garden.types, clojure.browser.repl clojure.browser.repl, dommy dommy.core, cljs.js cljs.js, rc dynomics.ui.core, om.dom om.dom, dc dynomics.space.core, color garden.color, cljs.core.async cljs.core.async, m dynomics.ui.messaging, dynomics.ui.core dynomics.ui.core, dynomics.ui.messaging dynomics.ui.messaging, uicss dynomics.ui.css, om.core om.core, garden.color garden.color, dommy.core dommy.core, canvg canvg, om om.core, du dynomics.space.ui, goog.style goog.style, dynomics.space.ui dynomics.space.ui, dynomics.ui.persistence dynomics.ui.persistence, repl clojure.browser.repl, dynomics.space.core dynomics.space.core, garden.core garden.core}, :uses {input om.dom, rect om.dom, a om.dom, span om.dom, eval cljs.js, empty-state cljs.js, circle om.dom, css garden.core, rgb garden.color, hsl garden.color, canvas om.dom, div om.dom, round dynomics.space.core, g om.dom, hex->rgb garden.color, read-string cljs.tools.reader, js-eval cljs.js, svg om.dom, put! cljs.core.async}, :defs {->t_dynomics$ui$ui1890940 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta1890941])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890940, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta1890941]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 456, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta1890941])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui1890786 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890786, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 147, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-browser-info {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 216, :column 7, :end-line 216, :end-column 23, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-browser-info, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, make-function-selector-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 86, :column 7, :end-line 86, :end-column 34, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, :name dynomics.ui.ui/make-function-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 34, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, add-messaging {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 213, :column 7, :end-line 213, :end-column 20, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-messaging, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, main-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 476, :column 7, :end-line 476, :end-column 16, :arglists (quote ([]))}, :name dynomics.ui.ui/main-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 476, :end-line 476, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mousemoves {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([state]))}, :name dynomics.ui.ui/mousemoves, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ->t_dynomics$ui$ui1890796 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__1890789 map__1890790 state map__1890791 state-updates map__1890792 last-result last-exps meta1890797])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890796, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__1890789 map__1890790 state map__1890791 state-updates map__1890792 last-result last-exps meta1890797]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 163, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__1890789 map__1890790 state map__1890791 state-updates map__1890792 last-result last-exps meta1890797])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, select-node {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 222, :column 7, :end-line 222, :end-column 18, :arglists (quote ([s path mp]))}, :name dynomics.ui.ui/select-node, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([s path mp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s path mp]))}, t_dynomics$ui$ui1890796 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890796, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 163, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-kb-path {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 194, :column 7, :end-line 194, :end-column 19, :arglists (quote ([kb]))}, :name dynomics.ui.ui/make-kb-path, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 19, :method-params ([kb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([kb]))}, t_dynomics$ui$ui1890762 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890762, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, animation-frame {:name dynomics.ui.ui/animation-frame, :file "src/dynomics/ui/ui.cljs", :line 37, :column 1, :end-line 37, :end-column 21, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 37, :column 6, :end-line 37, :end-column 21}}, evaluate {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 153, :column 7, :end-line 153, :end-column 15, :arglists (quote ([s sexp f]))}, :name dynomics.ui.ui/evaluate, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s sexp f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s sexp f]))}, be-first {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 220, :column 7, :end-line 220, :end-column 15, :arglists (quote ([s]))}, :name dynomics.ui.ui/be-first, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, ->t_dynomics$ui$ui1890805 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__1890789 map__1890799 state map__1890800 state-updates map__1890801 last-result last-exps meta1890806])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890805, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__1890789 map__1890799 state map__1890800 state-updates map__1890801 last-result last-exps meta1890806]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 163, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__1890789 map__1890799 state map__1890800 state-updates map__1890801 last-result last-exps meta1890806])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui1890762 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__1890757 owner map__1890758 state map__1890759 state-updates meta1890763])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890762, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__1890757 owner map__1890758 state map__1890759 state-updates meta1890763]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-history-selector-view p__1890757 owner map__1890758 state map__1890759 state-updates meta1890763])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, evt-to-keyword {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 62, :column 7, :end-line 62, :end-column 21, :arglists (quote ([e]))}, :name dynomics.ui.ui/evt-to-keyword, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, keydown {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keydown, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 14, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, t_dynomics$ui$ui1890781 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890781, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 147, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-footer-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 161, :column 7, :end-line 161, :end-column 23, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, :name dynomics.ui.ui/make-footer-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__1890789]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, is-modifier {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([keycode]))}, :name dynomics.ui.ui/is-modifier, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([keycode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keycode]))}, left-right-top-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 455, :column 7, :end-line 455, :end-column 26, :arglists (quote ([state]))}, :name dynomics.ui.ui/left-right-top-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 26, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 455, :end-line 455, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ->t_dynomics$ui$ui1890786 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__1890778 map__1890784 state logo-text app-name app-version meta1890787])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890786, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__1890778 map__1890784 state logo-text app-name app-version meta1890787]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 147, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__1890778 map__1890784 state logo-text app-name app-version meta1890787])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-components {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 185, :column 7, :end-line 185, :end-column 21, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-components, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ->t_dynomics$ui$ui1890750 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta1890751])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890750, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta1890751]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta1890751])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, set-current-tool {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 190, :column 7, :end-line 190, :end-column 23, :arglists (quote ([tool-key state]))}, :name dynomics.ui.ui/set-current-tool, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([tool-key state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tool-key state]))}, add-keybindings {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 199, :column 7, :end-line 199, :end-column 22, :arglists (quote ([state] [state tools])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/add-keybindings, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}, :method-params ([state] [state tools]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state tools])}, t_dynomics$ui$ui1890935 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890935, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 456, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui1890781 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__1890778 map__1890779 state logo-text app-name app-version meta1890782])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890781, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__1890778 map__1890779 state logo-text app-name app-version meta1890782]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 147, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__1890778 map__1890779 state logo-text app-name app-version meta1890782])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui1890772 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__1890757 owner map__1890768 state map__1890769 state-updates meta1890773])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890772, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__1890757 owner map__1890768 state map__1890769 state-updates meta1890773]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-history-selector-view p__1890757 owner map__1890768 state map__1890769 state-updates meta1890773])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, start {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 501, :column 7, :end-line 501, :end-column 12, :arglists (quote ([] [state])), :doc "Start the application!", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/start, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}, :method-params ([] [state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 501, :end-line 501, :max-fixed-arity 1, :fn-var true, :arglists ([] [state]), :doc "Start the application!"}, ->t_dynomics$ui$ui1890743 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta1890744])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890743, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta1890744]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta1890744])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui1890945 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta1890946])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890945, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta1890946]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 478, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta1890946])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui1890805 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890805, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 163, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui1890940 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890940, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 456, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui1890772 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890772, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, parse-px {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 83, :column 7, :end-line 83, :end-column 15, :arglists (quote ([v]))}, :name dynomics.ui.ui/parse-px, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, make-history-selector-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 110, :column 7, :end-line 110, :end-column 33, :arglists (quote ([{{:keys [state-updates]} :messaging, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, :name dynomics.ui.ui/make-history-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 33, :method-params ([p__1890757 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, add-functions {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 229, :column 7, :end-line 229, :end-column 20, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, :name dynomics.ui.ui/add-functions, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, keyup {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keyup, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, ->t_dynomics$ui$ui1890952 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta1890953])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890952, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta1890953]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 478, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta1890953])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-events! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 72, :column 7, :end-line 72, :end-column 18, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-events!, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, isnt-modifier {:name dynomics.ui.ui/isnt-modifier, :file "src/dynomics/ui/ui.cljs", :line 52, :column 1, :end-line 52, :end-column 19, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 52, :column 6, :end-line 52, :end-column 19}}, t_dynomics$ui$ui1890945 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890945, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 478, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui1890743 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890743, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui1890952 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890952, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 478, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-header-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 144, :column 7, :end-line 144, :end-column 23, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, :name dynomics.ui.ui/make-header-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__1890778]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, ->t_dynomics$ui$ui1890935 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta1890936])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui1890935, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta1890936]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 456, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta1890936])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui1890750 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui1890750, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {hipo.core hipo.core, dom om.dom, hipo hipo.core, dommy dommy.core, cljs.js cljs.js, om.dom om.dom, color garden.color, om.core om.core, garden.color garden.color, dommy.core dommy.core, om om.core}, :cljs.analyzer/constants {:seen #{:y :nothing :description :load :path :q :state-updates :move-offset last-exps :last-node-added make-function-selector-view meta1890936 map__1890759 :history-item logo-text :space main-view :fn :desccription map__1890791 owner :screen :verb :key :dont-record :pan-zoom :keydown :else p__1890789 :mouse-up :browser meta1890782 state-updates :name last-result :w :as meta1890763 meta1890773 :dt :remove-selected :tools :functions map__1890801 :width map__1890769 :move :mouse-position :history :mouse :deselect-all :keymap :type :current-function :connect-nodes :minus :app-name :topic meta1890953 :state map__1890799 :icon map__1890784 :save make-footer-view :component :unselect :header map__1890758 :node-types :function left-right-top-view :mouse-down :enter map__1890779 :subscriptions map__1890790 :tools-order map__1890800 functions :g map__1890768 :keyup p__1890757 :keys :event :dynomics :keycode :vx :msgs :j :expr meta1890941 :vy :ui :result :h :messaging :function-selector :id app-name state :app-version meta1890946 :cf :om-builder :source-map meta1890806 :context make-history-selector-view :exps :position :d :f :action :error map__1890792 :mouse-move :t :x :write-channel meta1890797 :target :selected-nodes quote :arglists :version :query p__1890778 :keybinding :add :logo-text app-version meta1890744 :doc :handler make-header-view :select-nodes :current-tool :move-nodes meta1890787 :add-nodes :phase-space-node :message :height :select meta1890751 :message-channel :eval}, :order [:key :keycode :event :keydown :keyup :ui :mouse :vx :vy :x :y :functions :function-selector :header :history :messaging :state-updates :name :description :fn :action :current-function :verb :type :id :select :function make-function-selector-view :arglists :doc quote state owner functions state-updates meta1890744 meta1890751 :version :history-item :dont-record :desccription make-history-selector-view :keys :as p__1890757 map__1890758 map__1890759 meta1890763 map__1890768 map__1890769 meta1890773 :logo-text :app-name :app-version make-header-view logo-text app-name app-version p__1890778 map__1890779 meta1890782 map__1890784 meta1890787 :eval :source-map :context :expr :result :exps :enter :error :message :state make-footer-view last-result last-exps p__1890789 map__1890790 map__1890791 map__1890792 meta1890797 map__1890799 map__1890800 map__1890801 meta1890806 :subscriptions :dynomics :current-tool :keymap :tools :keybinding :browser :screen :width :height :space :selected-nodes :move-offset :om-builder :query :dt :tools-order :msgs :cf :component :pan-zoom :last-node-added :message-channel :write-channel :topic :handler :mouse-move :move-nodes :position :move :phase-space-node :mouse-down :path :mouse-up :unselect :add-nodes :mouse-position :add :connect-nodes :select-nodes :nothing :deselect-all :remove-selected :save :load :node-types :icon :w :minus :d :g :q :t :h :f :j left-right-top-view meta1890936 meta1890941 :else main-view meta1890946 meta1890953 :target]}, :doc "\n  Here is the main UI\n\n  It's built with Om/React for rendering state to the DOM\n  and core.asyc for user interaction, state updates\n  and IO\n\n  Everything is built in the browser including the CSS\n\n  "}