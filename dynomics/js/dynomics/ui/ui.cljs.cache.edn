;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.ui.ui, :imports nil, :requires {hipo.core hipo.core, gtypes garden.types, dom om.dom, ps dynomics.ui.persistence, hipo hipo.core, cljs.tools.reader cljs.tools.reader, dynomics.ui.css dynomics.ui.css, async cljs.core.async, garden.types garden.types, clojure.browser.repl clojure.browser.repl, dommy dommy.core, cljs.js cljs.js, rc dynomics.ui.core, om.dom om.dom, dc dynomics.space.core, color garden.color, cljs.core.async cljs.core.async, m dynomics.ui.messaging, dynomics.ui.core dynomics.ui.core, dynomics.ui.messaging dynomics.ui.messaging, uicss dynomics.ui.css, om.core om.core, garden.color garden.color, dommy.core dommy.core, canvg canvg, om om.core, du dynomics.space.ui, goog.style goog.style, dynomics.space.ui dynomics.space.ui, dynomics.ui.persistence dynomics.ui.persistence, repl clojure.browser.repl, dynomics.space.core dynomics.space.core, garden.core garden.core}, :uses {input om.dom, rect om.dom, a om.dom, span om.dom, eval cljs.js, empty-state cljs.js, circle om.dom, css garden.core, rgb garden.color, hsl garden.color, canvas om.dom, div om.dom, round dynomics.space.core, g om.dom, hex->rgb garden.color, read-string cljs.tools.reader, js-eval cljs.js, svg om.dom, put! cljs.core.async}, :defs {t_dynomics$ui$ui884172 {:num-fields 9, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884172, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui884153 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884153, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui884345 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884345, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 462, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui884350 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta884351])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884350, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta884351]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 462, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta884351])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-browser-info {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 221, :column 7, :end-line 221, :end-column 23, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-browser-info, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, make-function-selector-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 86, :column 7, :end-line 86, :end-column 34, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, :name dynomics.ui.ui/make-function-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 34, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, t_dynomics$ui$ui884355 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884355, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 482, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-messaging {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 218, :column 7, :end-line 218, :end-column 20, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-messaging, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, main-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 480, :column 7, :end-line 480, :end-column 16, :arglists (quote ([]))}, :name dynomics.ui.ui/main-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 480, :end-line 480, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mousemoves {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([state]))}, :name dynomics.ui.ui/mousemoves, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ->t_dynomics$ui$ui884191 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__884188 map__884189 state logo-text app-name app-version meta884192])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884191, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__884188 map__884189 state logo-text app-name app-version meta884192]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 152, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__884188 map__884189 state logo-text app-name app-version meta884192])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui884362 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta884363])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884362, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta884363]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 482, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta884363])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, select-node {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 227, :column 7, :end-line 227, :end-column 18, :arglists (quote ([s path mp]))}, :name dynomics.ui.ui/select-node, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([s path mp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s path mp]))}, make-kb-path {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 199, :column 7, :end-line 199, :end-column 19, :arglists (quote ([kb]))}, :name dynomics.ui.ui/make-kb-path, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 19, :method-params ([kb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([kb]))}, t_dynomics$ui$ui884196 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884196, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 152, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, animation-frame {:name dynomics.ui.ui/animation-frame, :file "src/dynomics/ui/ui.cljs", :line 37, :column 1, :end-line 37, :end-column 21, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 37, :column 6, :end-line 37, :end-column 21}}, evaluate {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 158, :column 7, :end-line 158, :end-column 15, :arglists (quote ([s sexp f]))}, :name dynomics.ui.ui/evaluate, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s sexp f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s sexp f]))}, be-first {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 225, :column 7, :end-line 225, :end-column 15, :arglists (quote ([s]))}, :name dynomics.ui.ui/be-first, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, ->t_dynomics$ui$ui884345 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta884346])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884345, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta884346]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 462, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta884346])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui884206 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884206, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 168, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, evt-to-keyword {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 62, :column 7, :end-line 62, :end-column 21, :arglists (quote ([e]))}, :name dynomics.ui.ui/evt-to-keyword, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, t_dynomics$ui$ui884160 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884160, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, keydown {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keydown, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 14, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, ->t_dynomics$ui$ui884153 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta884154])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884153, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta884154]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta884154])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-footer-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 166, :column 7, :end-line 166, :end-column 23, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, :name dynomics.ui.ui/make-footer-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__884199]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, is-modifier {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([keycode]))}, :name dynomics.ui.ui/is-modifier, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([keycode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keycode]))}, t_dynomics$ui$ui884182 {:num-fields 9, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884182, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, left-right-top-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 461, :column 7, :end-line 461, :end-column 26, :arglists (quote ([state]))}, :name dynomics.ui.ui/left-right-top-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 26, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, add-components {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 190, :column 7, :end-line 190, :end-column 21, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-components, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, set-current-tool {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 195, :column 7, :end-line 195, :end-column 23, :arglists (quote ([tool-key state]))}, :name dynomics.ui.ui/set-current-tool, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([tool-key state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tool-key state]))}, add-keybindings {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 204, :column 7, :end-line 204, :end-column 22, :arglists (quote ([state] [state tools])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/add-keybindings, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}, :method-params ([state] [state tools]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state tools])}, ->t_dynomics$ui$ui884206 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__884199 map__884200 state map__884201 state-updates map__884202 last-result last-exps meta884207])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884206, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__884199 map__884200 state map__884201 state-updates map__884202 last-result last-exps meta884207]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 168, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__884199 map__884200 state map__884201 state-updates map__884202 last-result last-exps meta884207])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, start {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 505, :column 7, :end-line 505, :end-column 12, :arglists (quote ([] [state])), :doc "Start the application!", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/start, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}, :method-params ([] [state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 505, :end-line 505, :max-fixed-arity 1, :fn-var true, :arglists ([] [state]), :doc "Start the application!"}, t_dynomics$ui$ui884350 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884350, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 462, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, parse-px {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 83, :column 7, :end-line 83, :end-column 15, :arglists (quote ([v]))}, :name dynomics.ui.ui/parse-px, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, t_dynomics$ui$ui884191 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884191, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 152, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui884362 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884362, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 482, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-history-selector-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 110, :column 7, :end-line 110, :end-column 33, :arglists (quote ([{{:keys [state-updates]} :messaging, sh :show-history, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, :name dynomics.ui.ui/make-history-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 33, :method-params ([p__884167 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, sh :show-history, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, add-functions {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 234, :column 7, :end-line 234, :end-column 20, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, :name dynomics.ui.ui/add-functions, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, ->t_dynomics$ui$ui884215 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__884199 map__884209 state map__884210 state-updates map__884211 last-result last-exps meta884216])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884215, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__884199 map__884209 state map__884210 state-updates map__884211 last-result last-exps meta884216]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 168, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__884199 map__884209 state map__884210 state-updates map__884211 last-result last-exps meta884216])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, keyup {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keyup, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, ->t_dynomics$ui$ui884196 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__884188 map__884194 state logo-text app-name app-version meta884197])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884196, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__884188 map__884194 state logo-text app-name app-version meta884197]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 152, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__884188 map__884194 state logo-text app-name app-version meta884197])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui884215 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui884215, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 168, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-events! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 72, :column 7, :end-line 72, :end-column 18, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-events!, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ->t_dynomics$ui$ui884182 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__884167 owner map__884178 state map__884179 state-updates sh meta884183])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884182, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__884167 owner map__884178 state map__884179 state-updates sh meta884183]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 9, :fn-var true, :arglists (quote ([make-history-selector-view p__884167 owner map__884178 state map__884179 state-updates sh meta884183])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, isnt-modifier {:name dynomics.ui.ui/isnt-modifier, :file "src/dynomics/ui/ui.cljs", :line 52, :column 1, :end-line 52, :end-column 19, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 52, :column 6, :end-line 52, :end-column 19}}, ->t_dynomics$ui$ui884160 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta884161])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884160, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta884161]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta884161])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-header-view {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/ui/ui.cljs", :line 149, :column 7, :end-line 149, :end-column 23, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, :name dynomics.ui.ui/make-header-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__884188]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, ->t_dynomics$ui$ui884355 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta884356])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884355, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta884356]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 482, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta884356])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui884172 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__884167 owner map__884168 state map__884169 state-updates sh meta884173])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui884172, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__884167 owner map__884168 state map__884169 state-updates sh meta884173]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 9, :fn-var true, :arglists (quote ([make-history-selector-view p__884167 owner map__884168 state map__884169 state-updates sh meta884173])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {hipo.core hipo.core, dom om.dom, hipo hipo.core, dommy dommy.core, cljs.js cljs.js, om.dom om.dom, color garden.color, om.core om.core, garden.color garden.color, dommy.core dommy.core, om om.core}, :cljs.analyzer/constants {:seen #{meta884192 :y :nothing sh :description :load :path :q :state-updates :move-offset last-exps :last-node-added make-function-selector-view :history-item logo-text :space main-view :fn :desccription owner :screen :verb meta884173 :key :dont-record :pan-zoom :keydown :else meta884207 map__884200 :mouse-up :browser state-updates map__884201 :name last-result :w :as meta884351 meta884363 :dt :remove-selected :tools :functions :width :move map__884179 :mouse-position :history :mouse :deselect-all :keymap map__884178 :type :current-function :connect-nodes :minus :app-name :topic :state map__884189 :icon map__884209 :save make-footer-view meta884161 :component meta884346 :unselect :header :node-types :function left-right-top-view map__884211 :mouse-down :enter :subscriptions :tools-order functions p__884188 :g :keyup :keys :event :dynomics :keycode :vx :msgs :j :expr :vy :ui :result meta884197 :h :messaging :function-selector :id app-name meta884154 state :app-version map__884210 :cf map__884169 :om-builder :source-map :context make-history-selector-view map__884194 :exps :position :d :f :action :error :mouse-move :t :x :write-channel :target :show-history :selected-nodes quote :arglists :version :query :keybinding :add :logo-text app-version :doc meta884183 meta884356 p__884167 meta884216 :handler make-header-view :select-nodes :current-tool :move-nodes :add-nodes :phase-space-node :message :height :select map__884202 p__884199 :message-channel map__884168 :eval}, :order [:key :keycode :event :keydown :keyup :ui :mouse :vx :vy :x :y :functions :function-selector :header :history :messaging :state-updates :name :description :fn :action :current-function :verb :type :id :select :function make-function-selector-view :arglists :doc quote state owner functions state-updates meta884154 meta884161 :show-history :version :history-item :dont-record :desccription make-history-selector-view :keys sh :as p__884167 map__884168 map__884169 meta884173 map__884178 map__884179 meta884183 :logo-text :app-name :app-version make-header-view logo-text app-name app-version p__884188 map__884189 meta884192 map__884194 meta884197 :eval :source-map :context :expr :result :exps :enter :error :message :state make-footer-view last-result last-exps p__884199 map__884200 map__884201 map__884202 meta884207 map__884209 map__884210 map__884211 meta884216 :subscriptions :dynomics :current-tool :keymap :tools :keybinding :browser :screen :width :height :space :selected-nodes :move-offset :om-builder :query :dt :tools-order :msgs :cf :component :pan-zoom :last-node-added :message-channel :write-channel :topic :handler :mouse-move :move-nodes :position :move :phase-space-node :mouse-down :path :mouse-up :unselect :add-nodes :mouse-position :add :connect-nodes :select-nodes :nothing :deselect-all :remove-selected :save :load :node-types :icon :w :minus :d :g :q :t :h :f :j left-right-top-view meta884346 meta884351 :else main-view meta884356 meta884363 :target]}, :doc "\n  Here is the main UI\n\n  It's built with Om/React for rendering state to the DOM\n  and core.asyc for user interaction, state updates\n  and IO\n\n  Everything is built in the browser including the CSS\n\n  "}