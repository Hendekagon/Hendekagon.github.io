;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.ui.ui, :imports nil, :requires {hipo.core hipo.core, gtypes garden.types, dom om.dom, ps dynomics.ui.persistence, hipo hipo.core, cljs.tools.reader cljs.tools.reader, dynomics.ui.css dynomics.ui.css, async cljs.core.async, garden.types garden.types, clojure.browser.repl clojure.browser.repl, dommy dommy.core, cljs.js cljs.js, rc dynomics.ui.core, om.dom om.dom, dc dynomics.space.core, color garden.color, cljs.core.async cljs.core.async, m dynomics.ui.messaging, dynomics.ui.core dynomics.ui.core, dynomics.ui.messaging dynomics.ui.messaging, uicss dynomics.ui.css, om.core om.core, garden.color garden.color, dommy.core dommy.core, canvg canvg, om om.core, du dynomics.space.ui, goog.style goog.style, dynomics.space.ui dynomics.space.ui, dynomics.ui.persistence dynomics.ui.persistence, repl clojure.browser.repl, dynomics.space.core dynomics.space.core, garden.core garden.core}, :uses {input om.dom, rect om.dom, a om.dom, span om.dom, eval cljs.js, empty-state cljs.js, circle om.dom, css garden.core, rgb garden.color, hsl garden.color, canvas om.dom, div om.dom, round dynomics.space.core, g om.dom, hex->rgb garden.color, read-string cljs.tools.reader, js-eval cljs.js, svg om.dom, put! cljs.core.async}, :defs {->t_dynomics$ui$ui381953 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__381937 map__381947 state map__381948 state-updates map__381949 last-result last-exps meta381954])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381953, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__381937 map__381947 state map__381948 state-updates map__381949 last-result last-exps meta381954]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 163, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__381937 map__381947 state map__381948 state-updates map__381949 last-result last-exps meta381954])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-browser-info {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 216, :column 7, :end-line 216, :end-column 23, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-browser-info, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, make-function-selector-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 86, :column 7, :end-line 86, :end-column 34, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, :name dynomics.ui.ui/make-function-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 34, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner])), :doc "Returns a component for selecting the current function"}, t_dynomics$ui$ui382088 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui382088, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 456, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui381920 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__381905 owner map__381916 state map__381917 state-updates meta381921])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381920, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__381905 owner map__381916 state map__381917 state-updates meta381921]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-history-selector-view p__381905 owner map__381916 state map__381917 state-updates meta381921])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui381944 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-footer-view p__381937 map__381938 state map__381939 state-updates map__381940 last-result last-exps meta381945])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381944, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-footer-view p__381937 map__381938 state map__381939 state-updates map__381940 last-result last-exps meta381945]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 163, :max-fixed-arity 10, :fn-var true, :arglists (quote ([make-footer-view p__381937 map__381938 state map__381939 state-updates map__381940 last-result last-exps meta381945])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-messaging {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 213, :column 7, :end-line 213, :end-column 20, :arglists (quote ([s]))}, :name dynomics.ui.ui/add-messaging, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, main-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 476, :column 7, :end-line 476, :end-column 16, :arglists (quote ([]))}, :name dynomics.ui.ui/main-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 476, :end-line 476, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t_dynomics$ui$ui382083 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui382083, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 456, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, mousemoves {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([state]))}, :name dynomics.ui.ui/mousemoves, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ->t_dynomics$ui$ui382093 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta382094])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui382093, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta382094]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 478, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta382094])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, select-node {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 222, :column 7, :end-line 222, :end-column 18, :arglists (quote ([s path mp]))}, :name dynomics.ui.ui/select-node, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([s path mp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s path mp]))}, t_dynomics$ui$ui381929 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381929, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 147, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui381953 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381953, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 163, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui381934 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__381926 map__381932 state logo-text app-name app-version meta381935])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381934, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__381926 map__381932 state logo-text app-name app-version meta381935]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 147, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__381926 map__381932 state logo-text app-name app-version meta381935])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-kb-path {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 194, :column 7, :end-line 194, :end-column 19, :arglists (quote ([kb]))}, :name dynomics.ui.ui/make-kb-path, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 19, :method-params ([kb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([kb]))}, ->t_dynomics$ui$ui382088 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta382089])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui382088, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta382089]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 456, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta382089])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, animation-frame {:name dynomics.ui.ui/animation-frame, :file "src/dynomics/ui/ui.cljs", :line 37, :column 1, :end-line 37, :end-column 21, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 37, :column 6, :end-line 37, :end-column 21}}, t_dynomics$ui$ui382100 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui382100, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 478, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui382093 {:num-fields 4, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui382093, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 478, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, evaluate {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 153, :column 7, :end-line 153, :end-column 15, :arglists (quote ([s sexp f]))}, :name dynomics.ui.ui/evaluate, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s sexp f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s sexp f]))}, be-first {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 220, :column 7, :end-line 220, :end-column 15, :arglists (quote ([s]))}, :name dynomics.ui.ui/be-first, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, evt-to-keyword {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 62, :column 7, :end-line 62, :end-column 21, :arglists (quote ([e]))}, :name dynomics.ui.ui/evt-to-keyword, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, keydown {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keydown, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 14, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, make-footer-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 161, :column 7, :end-line 161, :end-column 23, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, :name dynomics.ui.ui/make-footer-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__381937]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, {last-result :result, last-exps :exps} :eval, :as state}]))}, is-modifier {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([keycode]))}, :name dynomics.ui.ui/is-modifier, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([keycode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keycode]))}, ->t_dynomics$ui$ui381929 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-header-view p__381926 map__381927 state logo-text app-name app-version meta381930])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381929, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-header-view p__381926 map__381927 state logo-text app-name app-version meta381930]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 147, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-header-view p__381926 map__381927 state logo-text app-name app-version meta381930])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui381934 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381934, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 147, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui381891 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta381892])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381891, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta381892]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta381892])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, left-right-top-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 455, :column 7, :end-line 455, :end-column 26, :arglists (quote ([state]))}, :name dynomics.ui.ui/left-right-top-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 26, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 455, :end-line 455, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, ->t_dynomics$ui$ui381898 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-function-selector-view state owner functions state-updates meta381899])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381898, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-function-selector-view state owner functions state-updates meta381899]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 94, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-function-selector-view state owner functions state-updates meta381899])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-components {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 185, :column 7, :end-line 185, :end-column 21, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-components, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, set-current-tool {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 190, :column 7, :end-line 190, :end-column 23, :arglists (quote ([tool-key state]))}, :name dynomics.ui.ui/set-current-tool, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([tool-key state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tool-key state]))}, add-keybindings {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 199, :column 7, :end-line 199, :end-column 22, :arglists (quote ([state] [state tools])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/add-keybindings, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state tools]), :arglists ([state] [state tools]), :arglists-meta (nil nil)}, :method-params ([state] [state tools]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state tools])}, start {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 501, :column 7, :end-line 501, :end-column 12, :arglists (quote ([] [state])), :doc "Start the application!", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}}, :name dynomics.ui.ui/start, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [state]), :arglists ([] [state]), :arglists-meta (nil nil)}, :method-params ([] [state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 501, :end-line 501, :max-fixed-arity 1, :fn-var true, :arglists ([] [state]), :doc "Start the application!"}, t_dynomics$ui$ui381944 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381944, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 3, :line 163, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, parse-px {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 83, :column 7, :end-line 83, :end-column 15, :arglists (quote ([v]))}, :name dynomics.ui.ui/parse-px, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, make-history-selector-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 110, :column 7, :end-line 110, :end-column 33, :arglists (quote ([{{:keys [state-updates]} :messaging, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, :name dynomics.ui.ui/make-history-selector-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 33, :method-params ([p__381905 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [state-updates]} :messaging, :as state} owner])), :doc "Return a component to display a list\n  of historical states which select a historical\n  state on mouseover"}, add-functions {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 229, :column 7, :end-line 229, :end-column 20, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, :name dynomics.ui.ui/add-functions, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :doc "\n  Returns the given state map with UI functions added.\n\n  Each component is represented by a map with:\n\n  * an id\n  * a name\n  * the name of the Om builder fn to make its UI component\n  * a query of the state that returns everything the UI component will need\n  * a subscriptions fn that returns a list of messages it wants of subscribe to\n\n  and anything else it needs\n\n  "}, keyup {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([state e]))}, :name dynomics.ui.ui/keyup, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 12, :method-params ([state e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state e]))}, t_dynomics$ui$ui381910 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381910, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui382083 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([left-right-top-view state meta382084])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui382083, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([left-right-top-view state meta382084]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 456, :max-fixed-arity 3, :fn-var true, :arglists (quote ([left-right-top-view state meta382084])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-events! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 72, :column 7, :end-line 72, :end-column 18, :arglists (quote ([state]))}, :name dynomics.ui.ui/add-events!, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, isnt-modifier {:name dynomics.ui.ui/isnt-modifier, :file "src/dynomics/ui/ui.cljs", :line 52, :column 1, :end-line 52, :end-column 19, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 52, :column 6, :end-line 52, :end-column 19}}, t_dynomics$ui$ui381891 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381891, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$ui$ui381910 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-history-selector-view p__381905 owner map__381906 state map__381907 state-updates meta381911])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui381910, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([make-history-selector-view p__381905 owner map__381906 state map__381907 state-updates meta381911]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 115, :max-fixed-arity 8, :fn-var true, :arglists (quote ([make-history-selector-view p__381905 owner map__381906 state map__381907 state-updates meta381911])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-header-view {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/ui.cljs", :line 144, :column 7, :end-line 144, :end-column 23, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, :name dynomics.ui.ui/make-header-view, :variadic false, :file "src/dynomics/ui/ui.cljs", :end-column 23, :method-params ([p__381926]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [logo-text app-name app-version], :as state}])), :doc "Returns a component for the top header"}, ->t_dynomics$ui$ui382100 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([main-view state owner meta382101])), :file nil}, :protocols #{om.core/IRender om.core/IWillMount cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.ui.ui/->t_dynomics$ui$ui382100, :variadic false, :file "src/dynomics/ui/ui.cljs", :method-params ([main-view state owner meta382101]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 478, :max-fixed-arity 4, :fn-var true, :arglists (quote ([main-view state owner meta382101])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui381898 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381898, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 6, :line 94, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$ui$ui381920 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.ui.ui/t_dynomics$ui$ui381920, :file "src/dynomics/ui/ui.cljs", :type true, :anonymous true, :column 5, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {hipo.core hipo.core, dom om.dom, hipo hipo.core, dommy dommy.core, cljs.js cljs.js, om.dom om.dom, color garden.color, om.core om.core, garden.color garden.color, dommy.core dommy.core, om om.core}, :cljs.analyzer/constants {:seen #{:y :nothing :description :load :path :q :state-updates :move-offset last-exps :last-node-added make-function-selector-view :history-item logo-text :space main-view :fn :desccription owner :screen meta381899 :verb :key :dont-record :pan-zoom :keydown map__381949 :else :mouse-up :browser state-updates meta382089 :name map__381938 last-result :w :as :dt :remove-selected map__381939 map__381907 :tools :functions :width :move :mouse-position :history :mouse :deselect-all :keymap :type :current-function :connect-nodes :minus :app-name :topic :state :icon :save :dynamics make-footer-view :component meta381921 :unselect :header :node-types :function map__381927 map__381947 left-right-top-view :mouse-down :enter meta381892 :subscriptions :tools-order functions :g p__381937 meta381954 map__381917 :keyup :keys :event :keycode :vx :msgs :j :expr :vy :ui :result :h map__381940 :messaging :function-selector :id app-name state :app-version meta381930 meta382084 :cf :om-builder map__381948 :source-map :context make-history-selector-view :exps meta382094 p__381926 :position :d :f :action map__381906 :error :mouse-move :t :x :write-channel :target :selected-nodes quote :arglists :version :query :keybinding :add :logo-text app-version map__381916 :doc meta381935 :handler make-header-view meta382101 p__381905 meta381945 :select-nodes :current-tool :move-nodes :add-nodes :phase-space-node :message :height :select meta381911 map__381932 :message-channel :eval}, :order [:key :keycode :event :keydown :keyup :ui :mouse :vx :vy :x :y :functions :function-selector :header :history :messaging :state-updates :name :description :fn :action :current-function :verb :type :id :select :function make-function-selector-view :arglists :doc quote state owner functions state-updates meta381892 meta381899 :version :history-item :dont-record :desccription make-history-selector-view :keys :as p__381905 map__381906 map__381907 meta381911 map__381916 map__381917 meta381921 :logo-text :app-name :app-version make-header-view logo-text app-name app-version p__381926 map__381927 meta381930 map__381932 meta381935 :eval :source-map :context :expr :result :exps :enter :error :message :state make-footer-view last-result last-exps p__381937 map__381938 map__381939 map__381940 meta381945 map__381947 map__381948 map__381949 meta381954 :subscriptions :dynamics :current-tool :keymap :tools :keybinding :browser :screen :width :height :space :selected-nodes :move-offset :om-builder :query :dt :tools-order :msgs :cf :component :pan-zoom :last-node-added :message-channel :write-channel :topic :handler :mouse-move :move-nodes :position :move :phase-space-node :mouse-down :path :mouse-up :unselect :add-nodes :mouse-position :add :connect-nodes :select-nodes :nothing :deselect-all :remove-selected :save :load :node-types :icon :w :minus :d :g :q :t :h :f :j left-right-top-view meta382084 meta382089 :else main-view meta382094 meta382101 :target]}, :doc "\n  Here is the main UI\n\n  It's built with Om/React for rendering state to the DOM\n  and core.asyc for user interaction, state updates\n  and IO\n\n  Everything is built in the browser including the CSS\n\n  "}