;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name dynomics.ui.core, :imports nil, :requires {dc dynomics.space.core, dynomics.space.core dynomics.space.core}, :uses nil, :defs {push-history {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 129, :column 7, :end-line 129, :end-column 19, :arglists (quote ([state]))}, :name dynomics.ui.core/push-history, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, add-keybinding {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 153, :column 7, :end-line 153, :end-column 21, :arglists (quote ([s k f]))}, :name dynomics.ui.core/add-keybinding, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 21, :method-params ([s k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s k f]))}, fn-for-event {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 122, :column 3, :end-line 122, :end-column 15, :arglists (quote ([s e]))}, :name dynomics.ui.core/fn-for-event, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 15, :method-params ([s e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s e]))}, update-state {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 164, :column 7, :end-line 164, :end-column 19, :arglists (quote ([s e] [s e f])), :doc "Returns an updated version of the given state,\n  either in response to the given event e, or according\n  to the given function f", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s e] [s e f]), :arglists ([s e] [s e f]), :arglists-meta (nil nil)}}, :name dynomics.ui.core/update-state, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s e] [s e f]), :arglists ([s e] [s e f]), :arglists-meta (nil nil)}, :method-params ([s e] [s e f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 3, :fn-var true, :arglists ([s e] [s e f]), :doc "Returns an updated version of the given state,\n  either in response to the given event e, or according\n  to the given function f"}, rotate-left {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 107, :column 7, :end-line 107, :end-column 18, :arglists (quote ([v]))}, :name dynomics.ui.core/rotate-left, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, make-state {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 176, :column 7, :end-line 176, :end-column 17, :arglists (quote ([])), :doc "Returns a blank default state"}, :name dynomics.ui.core/make-state, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a blank default state"}, default-keymap {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 155, :column 7, :end-line 155, :end-column 21, :arglists (quote ([]))}, :name dynomics.ui.core/default-keymap, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rotate-right {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 109, :column 7, :end-line 109, :end-column 19, :arglists (quote ([v]))}, :name dynomics.ui.core/rotate-right, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 19, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, keydown {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 115, :column 7, :end-line 115, :end-column 14, :arglists (quote ([s]))}, :name dynomics.ui.core/keydown, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 14, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, kop {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 111, :column 7, :end-line 111, :end-column 10, :arglists (quote ([x]))}, :name dynomics.ui.core/kop, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, redo {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 145, :column 7, :end-line 145, :end-column 11, :arglists (quote ([s] [s h] [cs h rs])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s] [s h] [cs h rs]), :arglists ([s] [s h] [cs h rs]), :arglists-meta (nil nil nil)}}, :name dynomics.ui.core/redo, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s] [s h] [cs h rs]), :arglists ([s] [s h] [cs h rs]), :arglists-meta (nil nil nil)}, :method-params ([s] [s h] [cs h rs]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 3, :fn-var true, :arglists ([s] [s h] [cs h rs])}, alphabet {:name dynomics.ui.core/alphabet, :file "src/dynomics/ui/core.cljc", :line 12, :column 1, :end-line 12, :end-column 14, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 12, :column 6, :end-line 12, :end-column 14}}, numbers {:name dynomics.ui.core/numbers, :file "src/dynomics/ui/core.cljc", :line 43, :column 1, :end-line 43, :end-column 13, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 43, :column 6, :end-line 43, :end-column 13}}, keycode-to-keyword {:name dynomics.ui.core/keycode-to-keyword, :file "src/dynomics/ui/core.cljc", :line 58, :column 1, :end-line 58, :end-column 24, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 58, :column 6, :end-line 58, :end-column 24}}, reset-keypath {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 113, :column 7, :end-line 113, :end-column 20, :arglists (quote ([s]))}, :name dynomics.ui.core/reset-keypath, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, keyup {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 117, :column 7, :end-line 117, :end-column 12, :arglists (quote ([s] [s f])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s f]), :arglists ([s] [s f]), :arglists-meta (nil nil)}}, :name dynomics.ui.core/keyup, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s f]), :arglists ([s] [s f]), :arglists-meta (nil nil)}, :method-params ([s] [s f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists ([s] [s f])}, undo {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 135, :column 7, :end-line 135, :end-column 11, :arglists (quote ([s] [s h] [cs h us])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s] [s h] [cs h us]), :arglists ([s] [s h] [cs h us]), :arglists-meta (nil nil nil)}}, :name dynomics.ui.core/undo, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s] [s h] [cs h us]), :arglists ([s] [s h] [cs h us]), :arglists-meta (nil nil nil)}, :method-params ([s] [s h] [cs h us]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 3, :fn-var true, :arglists ([s] [s h] [cs h us])}, keep-stuff {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/ui/core.cljc", :line 133, :column 7, :end-line 133, :end-column 17, :arglists (quote ([cs us]))}, :name dynomics.ui.core/keep-stuff, :variadic false, :file "src/dynomics/ui/core.cljc", :end-column 17, :method-params ([cs us]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cs us]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :description :shift :dynomics.ui.core/apostrophe :q :down :r :space :home :insert :leftmeta :v :fn :o :key :dont-record :keydown :alt :esc :redo :default :n :w :m :dt :comma :rightbracket :0 :functions :numlock :appropriate-functions :pageup :4 :rightmeta :history :mouse :keymap :tilde :current-function :delete :minus :app-name :7 :equals :e :ctrl :s :l :up :k :1 :enter :leftbracket :8 :z :g :break :c :keyup :9 :event :dynomics :vx :undo :j :vy :ui :h :messaging :app-version :scrolllock :semicolon :capslock :b :2 :keypath :right :pagedown :5 :d :f :action :backspace :t :x :dot :3 :end :version :6 :tab :forwardslash :p :i :a :backslash :left :u}, :order [:a :f :j :v :h :e :u :x :m :k :z :y :b :r :l :d :s :n :q :o :w :i :c :g :p :t :7 :6 :0 :2 :8 :3 :9 :5 :4 :1 :semicolon :comma :capslock :esc :right :delete :dynomics.ui.core/apostrophe :numlock :tilde :rightbracket :space :down :leftmeta :pageup :enter :minus :forwardslash :home :equals :leftbracket :rightmeta :backslash :pagedown :ctrl :end :break :tab :scrolllock :insert :shift :up :alt :left :backspace :dot :keypath :keymap :key :fn :event :default :history :dont-record :undo :redo :action :version :keydown :dt :app-name :keyup :vx :ui :app-version :messaging :description :mouse :current-function :functions :appropriate-functions :vy :dynomics]}, :doc "\n  This namespace is for managing the state of the application\n\n  "}