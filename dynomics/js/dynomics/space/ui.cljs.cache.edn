;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.space.ui, :imports nil, :requires {dom om.dom, pz panzoom, dynomics.ui.css dynomics.ui.css, async cljs.core.async, panzoom panzoom, dommy dommy.core, om.dom om.dom, dc dynomics.space.core, cljs.core.async cljs.core.async, dynomics.ui.svg dynomics.ui.svg, uicss dynomics.ui.css, om.core om.core, dommy.core dommy.core, om om.core, dynomics.space.core dynomics.space.core, svg dynomics.ui.svg}, :uses {trs dynomics.ui.svg, input om.dom, radialGradient om.dom, rect om.dom, a om.dom, img om.dom, text om.dom, span om.dom, path om.dom, circle om.dom, P dynomics.space.core, J dynomics.space.core, C dynomics.space.core, c* dynomics.space.core, quadrant-types-colours dynomics.ui.css, canvas om.dom, div om.dom, p2c dynomics.space.core, g om.dom, stop om.dom, line om.dom, defs om.dom, svg om.dom, linearGradient om.dom, put! cljs.core.async}, :defs {t_dynomics$space$ui207330 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207330, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 309, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui207393 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207393, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 346, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, toggle-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/toggle-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__207126]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, make-node-types-cached-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 260, :column 7, :end-line 260, :end-column 39, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, :name dynomics.space.ui/make-node-types-cached-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 39, :method-params ([p__207293 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, make-trajectory-group {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 121, :column 7, :end-line 121, :end-column 28, :arglists (quote ([with-arrowhead trajectory]))}, :name dynomics.space.ui/make-trajectory-group, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 28, :method-params ([with-arrowhead trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists (quote ([with-arrowhead trajectory]))}, make-tools-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 239, :column 7, :end-line 239, :end-column 35, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, :name dynomics.space.ui/make-tools-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 35, :method-params ([p__207280]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, ->t_dynomics$space$ui207307 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__207304 map__207305 state component state-updates meta207308])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207307, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__207304 map__207305 state component state-updates meta207308]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 286, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__207304 map__207305 state component state-updates meta207308])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-node-types-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 283, :column 7, :end-line 283, :end-column 40, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, :name dynomics.space.ui/make-node-types-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 40, :method-params ([p__207304]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, test-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 400, :column 7, :end-line 400, :end-column 21, :arglists (quote ([x]))}, :name dynomics.space.ui/test-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->t_dynomics$space$ui207296 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__207293 owner map__207294 id type meta207297])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207296, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__207293 owner map__207294 id type meta207297]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 265, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__207293 owner map__207294 id type meta207297])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-prerender-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 478, :column 7, :end-line 478, :end-column 31, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, :name dynomics.space.ui/make-prerender-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 31, :method-params ([p__207436]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 478, :end-line 478, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, ->t_dynomics$space$ui207377 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes vec__207372 current-tool pz p__207369 path y make-node-component node-scale map__207371 map__207370 node-type msgs id map__207373 meta207378])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207377, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes vec__207372 current-tool pz p__207369 path y make-node-component node-scale map__207371 map__207370 node-type msgs id map__207373 meta207378]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 346, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes vec__207372 current-tool pz p__207369 path y make-node-component node-scale map__207371 map__207370 node-type msgs id map__207373 meta207378])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207354 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x vec__207346 p__207344 y p2 vec__207349 p4 p3 qx qy vec__207351 p1 make-open-region-component cx cy map__207348 map__207345 node-id vec__207347 quadrant-type vec__207350 meta207355])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207354, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([x vec__207346 p__207344 y p2 vec__207349 p4 p3 qx qy vec__207351 p1 make-open-region-component cx cy map__207348 map__207345 node-id vec__207347 quadrant-type vec__207350 meta207355]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([x vec__207346 p__207344 y p2 vec__207349 p4 p3 qx qy vec__207351 p1 make-open-region-component cx cy map__207348 map__207345 node-id vec__207347 quadrant-type vec__207350 meta207355])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, enable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/enable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__207136]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, ->t_dynomics$space$ui207393 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool pz p__207369 path y map__207386 make-node-component vec__207388 node-scale node-type map__207389 msgs id map__207387 meta207394])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207393, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool pz p__207369 path y map__207386 make-node-component vec__207388 node-scale node-type map__207389 msgs id map__207387 meta207394]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 346, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool pz p__207369 path y map__207386 make-node-component vec__207388 node-scale node-type map__207389 msgs id map__207387 meta207394])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, spiral {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 168, :column 7, :end-line 168, :end-column 13, :arglists (quote ([samples expansion rotation] [start init-points samples expansion rotation])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/spiral, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 5, :fn-var true, :arglists ([samples expansion rotation] [start init-points samples expansion rotation])}, t_dynomics$space$ui207424 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207424, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 419, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207448 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes map__207444 make-prerender-component edges space map__207445 node-scale regions p__207436 state nodes cf meta207449])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207448, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes map__207444 make-prerender-component edges space map__207445 node-scale regions p__207436 state nodes cf meta207449]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 481, :max-fixed-arity 13, :fn-var true, :arglists (quote ([selected-nodes map__207444 make-prerender-component edges space map__207445 node-scale regions p__207436 state nodes cf meta207449])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207366 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x vec__207361 vec__207362 p__207344 y p2 p4 p3 vec__207363 qx map__207360 vec__207359 map__207357 qy vec__207358 p1 make-open-region-component cx cy node-id quadrant-type meta207367])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207366, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([x vec__207361 vec__207362 p__207344 y p2 p4 p3 vec__207363 qx map__207360 vec__207359 map__207357 qy vec__207358 p1 make-open-region-component cx cy node-id quadrant-type meta207367]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([x vec__207361 vec__207362 p__207344 y p2 p4 p3 vec__207363 qx map__207360 vec__207359 map__207357 qy vec__207358 p1 make-open-region-component cx cy node-id quadrant-type meta207367])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207341 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 map__207333 cx1 ny2 vec__207337 make-edge-component cy2 nx2 vec__207339 vec__207334 vec__207338 cy1 node-scale ny1 cx2 compatible? vec__207336 p__207321 nid2 vec__207335 nid1 meta207342])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207341, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 map__207333 cx1 ny2 vec__207337 make-edge-component cy2 nx2 vec__207339 vec__207334 vec__207338 cy1 node-scale ny1 cx2 compatible? vec__207336 p__207321 nid2 vec__207335 nid1 meta207342]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 309, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 map__207333 cx1 ny2 vec__207337 make-edge-component cy2 nx2 vec__207339 vec__207334 vec__207338 cy1 node-scale ny1 cx2 compatible? vec__207336 p__207321 nid2 vec__207335 nid1 meta207342])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-2 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 133, :column 7, :end-line 133, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-2, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, make-edge-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 305, :column 7, :end-line 305, :end-column 26, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, :name dynomics.space.ui/make-edge-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__207321]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 305, :end-line 305, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, make-space-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 414, :column 7, :end-line 414, :end-column 27, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, :name dynomics.space.ui/make-space-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 27, :method-params ([p__207417]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, t_dynomics$space$ui207341 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207341, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 309, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-4 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 149, :column 7, :end-line 149, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-4, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, t_dynomics$space$ui207366 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207366, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-3 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 141, :column 7, :end-line 141, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-3, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, make-paths {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 221, :column 7, :end-line 221, :end-column 17, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, :name dynomics.space.ui/make-paths, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 17, :method-params ([p__207267]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, ->t_dynomics$space$ui207330 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 vec__207326 vec__207328 cx1 ny2 make-edge-component cy2 nx2 cy1 node-scale ny1 cx2 vec__207323 compatible? vec__207324 vec__207327 vec__207325 map__207322 p__207321 nid2 nid1 meta207331])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207330, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 vec__207326 vec__207328 cx1 ny2 make-edge-component cy2 nx2 cy1 node-scale ny1 cx2 vec__207323 compatible? vec__207324 vec__207327 vec__207325 map__207322 p__207321 nid2 nid1 meta207331]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 309, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 vec__207326 vec__207328 cx1 ny2 make-edge-component cy2 nx2 cy1 node-scale ny1 cx2 vec__207323 compatible? vec__207324 vec__207327 vec__207325 map__207322 p__207321 nid2 nid1 meta207331])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-node-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 339, :column 7, :end-line 339, :end-column 26, :arglists (quote ([{{[x y] :position, t :type, node-type :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, :name dynomics.space.ui/make-node-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__207369]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{[x y] :position, t :type, node-type :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, t_dynomics$space$ui207377 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207377, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 346, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, to-coords {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([element-id] [svg-element element])), :doc "Returns a function that converts local coords to\n  those of the given element-id's", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/to-coords, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}, :method-params ([element-id] [svg-element element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([element-id] [svg-element element]), :doc "Returns a function that converts local coords to\n  those of the given element-id's"}, render-to-image {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([] [id])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/render-to-image, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists ([] [id])}, saddle-5 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 158, :column 7, :end-line 158, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-5, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, disable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 61, :column 7, :end-line 61, :end-column 24, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/disable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 24, :method-params ([p__207131]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, t_dynomics$space$ui207315 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207315, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui207448 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207448, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 481, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui207354 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207354, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207405 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta207406])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207405, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta207406]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 401, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta207406])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui207441 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207441, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 481, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui207433 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207433, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 419, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-prerender-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 201, :column 7, :end-line 201, :end-column 26, :arglists (quote ([id type]))}, :name dynomics.space.ui/make-prerender-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([id type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id type]))}, t_dynomics$space$ui207402 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207402, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 401, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-handler {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, :name dynomics.space.ui/make-handler, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 19, :method-params ([transform type-key p__207235]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, t_dynomics$space$ui207301 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207301, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207441 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes make-prerender-component edges map__207437 space node-scale regions p__207436 state map__207438 nodes cf meta207442])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207441, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes make-prerender-component edges map__207437 space node-scale regions p__207436 state map__207438 nodes cf meta207442]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 481, :max-fixed-arity 13, :fn-var true, :arglists (quote ([selected-nodes make-prerender-component edges map__207437 space node-scale regions p__207436 state map__207438 nodes cf meta207442])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui207405 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207405, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 401, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207424 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes map__207418 current-tool edges pz make-space-component space node-scale regions map__207420 state p__207417 compatibilities msgs nodes map__207419 graph cf meta207425])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207424, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes map__207418 current-tool edges pz make-space-component space node-scale regions map__207420 state p__207417 compatibilities msgs nodes map__207419 graph cf meta207425]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 419, :max-fixed-arity 19, :fn-var true, :arglists (quote ([selected-nodes map__207418 current-tool edges pz make-space-component space node-scale regions map__207420 state p__207417 compatibilities msgs nodes map__207419 graph cf meta207425])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui207301 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__207293 owner map__207299 id type meta207302])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207301, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__207293 owner map__207299 id type meta207302]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 265, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__207293 owner map__207299 id type meta207302])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-open-region-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 321, :column 7, :end-line 321, :end-column 33, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, :name dynomics.space.ui/make-open-region-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 33, :method-params ([p__207344]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, ->t_dynomics$space$ui207433 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes current-tool edges pz make-space-component space map__207427 node-scale regions state map__207429 p__207417 compatibilities msgs nodes map__207428 graph cf meta207434])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207433, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes current-tool edges pz make-space-component space map__207427 node-scale regions state map__207429 p__207417 compatibilities msgs nodes map__207428 graph cf meta207434]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 419, :max-fixed-arity 19, :fn-var true, :arglists (quote ([selected-nodes current-tool edges pz make-space-component space map__207427 node-scale regions state map__207429 p__207417 compatibilities msgs nodes map__207428 graph cf meta207434])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-icon-fn {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 178, :column 7, :end-line 178, :end-column 18, :arglists (quote ([type-id]))}, :name dynomics.space.ui/get-icon-fn, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 18, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, ->t_dynomics$space$ui207315 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__207304 map__207313 state component state-updates meta207316])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207315, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__207304 map__207313 state component state-updates meta207316]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 286, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__207304 map__207313 state component state-updates meta207316])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-type-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 193, :column 7, :end-line 193, :end-column 21, :arglists (quote ([type-id]))}, :name dynomics.space.ui/make-type-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, ->t_dynomics$space$ui207402 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta207403])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui207402, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta207403]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 401, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta207403])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui207296 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207296, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, arrowhead {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 107, :column 7, :end-line 107, :end-column 16, :arglists (quote ([trajectory]))}, :name dynomics.space.ui/arrowhead, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :method-params ([trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trajectory]))}, t_dynomics$space$ui207307 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui207307, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-quadrant-gradients {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 403, :column 7, :end-line 403, :end-column 30, :arglists (quote ([]))}, :name dynomics.space.ui/make-quadrant-gradients, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 403, :end-line 403, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([pz] [])), :doc "Adds a panzoom object to the space", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}}, :name dynomics.space.ui/add-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}, :method-params ([pz] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([pz] []), :doc "Adds a panzoom object to the space"}}, :require-macros {dommy dommy.core, dommy.core dommy.core, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:y :description :path nx1 t connections x meta207442 meta207367 make-node-types-cached-component :state-updates p__207304 selected-nodes vec__207372 make-node-types-palette-component p__207293 vec__207361 test-component vec__207362 map__207418 map__207305 :r :space :js vec__207326 map__207444 vec__207328 make-prerender-component map__207333 :fn cx1 current-tool edges owner vec__207346 :stability ny2 :verb :key pz meta207403 :dont-record :pan-zoom meta207342 p__207369 map__207294 meta207308 p__207344 path map__207313 y :mouse-up state-updates p2 vec__207337 :name :as :node-scale meta207302 make-edge-component vec__207349 p4 :fill meta207331 p3 :dataurl map__207437 :tools make-space-component space :functions :regions :tool vec__207363 :width map__207386 :control-points meta207378 cy2 qx map__207360 :cursor :type nx2 vec__207339 :points make-node-component vec__207388 :icon meta207316 :node :node-type :component map__207427 vec__207334 :node-types :s vec__207338 meta207434 :maxZoom vec__207359 cy1 :compatible? :mouse-down map__207445 node-scale :compatibilities :tools-order :ml ny1 regions map__207420 cx2 meta207449 map__207299 :keys :event :dynomics p__207436 map__207357 :msgs :nodes map__207371 qy vec__207323 :ui type :node-id map__207370 vec__207358 :id state node-type component map__207429 :graph vec__207351 p1 compatible? :cf p__207417 :quadrant-type vec__207324 compatibilities :quadrant-vector meta207355 map__207438 :position :f make-open-region-component :action :point meta207297 meta207394 :quadrants :mouse-move :t :connections :x :minZoom vec__207336 vec__207327 map__207389 :selected-nodes quote :set meta207406 msgs nodes :arglists vec__207325 cx id :keybinding cy map__207348 map__207345 map__207428 node-id map__207419 :doc graph map__207322 cf p__207321 vec__207347 quadrant-type nid2 :current-tool :edges map__207373 vec__207335 vec__207350 nid1 meta207425 :height :select map__207387}, :order [:minZoom :maxZoom :pan-zoom :msgs :current-tool :verb :type :position :event :t :s :r :f :points :js :x :y :width :height :fill :nodes :edges :regions :node-scale :connections :tools :tools-order :state-updates :description :icon :keybinding :fn :action :ui :functions :dynomics :dont-record :select :tool :name :id :dataurl make-node-types-cached-component :arglists :doc quote :keys id type owner p__207293 map__207294 meta207297 map__207299 meta207302 :component :stability :node-types :set :node-type :key make-node-types-palette-component :as component state-updates state p__207304 map__207305 meta207308 map__207313 meta207316 :compatible? nx1 vec__207326 vec__207328 cx1 ny2 make-edge-component nid1 nid2 ny1 nx2 cx2 cy1 cy2 compatible? node-scale vec__207323 vec__207324 vec__207327 vec__207325 map__207322 p__207321 meta207331 map__207333 vec__207337 vec__207339 vec__207334 vec__207338 vec__207336 vec__207335 meta207342 :node-id :quadrant-type :quadrant-vector :point :control-points :ml x vec__207346 p__207344 y p2 vec__207349 p4 p3 qx qy vec__207351 p1 make-open-region-component node-id quadrant-type cx cy map__207348 map__207345 vec__207347 vec__207350 meta207355 vec__207361 vec__207362 vec__207363 map__207360 vec__207359 map__207357 vec__207358 meta207367 :node :selected-nodes :space :mouse-down :path :mouse-up :quadrants t connections selected-nodes vec__207372 current-tool pz p__207369 path make-node-component node-type msgs map__207371 map__207370 map__207373 meta207378 map__207386 vec__207388 map__207389 map__207387 meta207394 test-component meta207403 meta207406 :compatibilities :graph :cf :mouse-move :cursor map__207418 edges make-space-component nodes regions compatibilities graph space cf map__207420 p__207417 map__207419 meta207425 map__207427 map__207429 map__207428 meta207434 make-prerender-component map__207437 p__207436 map__207438 meta207442 map__207444 map__207445 meta207449]}, :doc "\n  This namespace provides components\n  for making the main space UI\n\n  Currently this is implemented with Om/React\n  and SVG, because that was the fastest way\n  to do it. We could move to Canvas or I'm\n  thinking maybe WebGL in future.\n\n  "}