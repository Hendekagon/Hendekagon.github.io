;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.space.ui, :imports nil, :requires {dom om.dom, pz panzoom, dynomics.ui.css dynomics.ui.css, async cljs.core.async, panzoom panzoom, dommy dommy.core, om.dom om.dom, dc dynomics.space.core, cljs.core.async cljs.core.async, dynomics.ui.svg dynomics.ui.svg, uicss dynomics.ui.css, om.core om.core, dommy.core dommy.core, om om.core, dynomics.space.core dynomics.space.core, svg dynomics.ui.svg}, :uses {trs dynomics.ui.svg, input om.dom, radialGradient om.dom, rect om.dom, a om.dom, img om.dom, text om.dom, span om.dom, path om.dom, circle om.dom, quadrant-types-colours dynomics.ui.css, canvas om.dom, div om.dom, g om.dom, stop om.dom, line om.dom, defs om.dom, svg om.dom, linearGradient om.dom, put! cljs.core.async}, :defs {t_dynomics$space$ui651179 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651179, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 393, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651206 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651206, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 461, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, toggle-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/toggle-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__650904]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, make-node-types-cached-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 261, :column 7, :end-line 261, :end-column 39, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, :name dynomics.space.ui/make-node-types-cached-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 39, :method-params ([p__651071 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, ->t_dynomics$space$ui651155 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes map__651151 current-tool pz path y pt make-node-component map__651148 node-scale vec__651150 p__651147 msgs id map__651149 meta651156])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651155, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes map__651151 current-tool pz path y pt make-node-component map__651148 node-scale vec__651150 p__651147 msgs id map__651149 meta651156]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 348, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes map__651151 current-tool pz path y pt make-node-component map__651148 node-scale vec__651150 p__651147 msgs id map__651149 meta651156])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-trajectory-group {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 121, :column 7, :end-line 121, :end-column 28, :arglists (quote ([with-arrowhead trajectory]))}, :name dynomics.space.ui/make-trajectory-group, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 28, :method-params ([with-arrowhead trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists (quote ([with-arrowhead trajectory]))}, ->t_dynomics$space$ui651198 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([map__651194 selected-nodes map__651192 current-tool edges pz map__651193 make-space-component space p__651182 node-scale regions state compatibilities msgs nodes graph cf meta651199])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651198, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([map__651194 selected-nodes map__651192 current-tool edges pz map__651193 make-space-component space p__651182 node-scale regions state compatibilities msgs nodes graph cf meta651199]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 400, :max-fixed-arity 19, :fn-var true, :arglists (quote ([map__651194 selected-nodes map__651192 current-tool edges pz map__651193 make-space-component space p__651182 node-scale regions state compatibilities msgs nodes graph cf meta651199])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-tools-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 240, :column 7, :end-line 240, :end-column 35, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, :name dynomics.space.ui/make-tools-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 35, :method-params ([p__651058]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, make-node-types-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 284, :column 7, :end-line 284, :end-column 40, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, :name dynomics.space.ui/make-node-types-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 40, :method-params ([p__651082]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, test-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 392, :column 7, :end-line 392, :end-column 21, :arglists (quote ([x]))}, :name dynomics.space.ui/test-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 392, :end-line 392, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, make-prerender-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 458, :column 7, :end-line 458, :end-column 31, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, :name dynomics.space.ui/make-prerender-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 31, :method-params ([p__651201]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 458, :end-line 458, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, ->t_dynomics$space$ui651119 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 map__651111 vec__651114 cx1 ny2 vec__651116 vec__651117 make-edge-component cy2 nx2 vec__651115 cy1 node-scale ny1 cx2 compatible? vec__651113 nid2 vec__651112 p__651099 nid1 meta651120])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651119, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 map__651111 vec__651114 cx1 ny2 vec__651116 vec__651117 make-edge-component cy2 nx2 vec__651115 cy1 node-scale ny1 cx2 compatible? vec__651113 nid2 vec__651112 p__651099 nid1 meta651120]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 310, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 map__651111 vec__651114 cx1 ny2 vec__651116 vec__651117 make-edge-component cy2 nx2 vec__651115 cy1 node-scale ny1 cx2 compatible? vec__651113 nid2 vec__651112 p__651099 nid1 meta651120])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, enable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/enable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__650914]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, spiral {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 168, :column 7, :end-line 168, :end-column 13, :arglists (quote ([samples expansion rotation] [start init-points samples expansion rotation])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/spiral, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 5, :fn-var true, :arglists ([samples expansion rotation] [start init-points samples expansion rotation])}, ->t_dynomics$space$ui651079 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__651071 owner map__651077 id type meta651080])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651079, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__651071 owner map__651077 id type meta651080]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 266, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__651071 owner map__651077 id type meta651080])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651093 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__651082 map__651091 state component state-updates meta651094])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651093, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__651082 map__651091 state component state-updates meta651094]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 287, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__651082 map__651091 state component state-updates meta651094])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651074 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__651071 owner map__651072 id type meta651075])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651074, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__651071 owner map__651072 id type meta651075]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 266, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__651071 owner map__651072 id type meta651075])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651093 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651093, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 287, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-2 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 133, :column 7, :end-line 133, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-2, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, ->t_dynomics$space$ui651206 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes p__651201 make-prerender-component edges space node-scale regions state map__651202 nodes map__651203 cf meta651207])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651206, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes p__651201 make-prerender-component edges space node-scale regions state map__651202 nodes map__651203 cf meta651207]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 461, :max-fixed-arity 13, :fn-var true, :arglists (quote ([selected-nodes p__651201 make-prerender-component edges space node-scale regions state map__651202 nodes map__651203 cf meta651207])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-edge-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 306, :column 7, :end-line 306, :end-column 26, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, :name dynomics.space.ui/make-edge-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__651099]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 306, :end-line 306, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, t_dynomics$space$ui651119 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651119, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 310, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651144 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651144, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-space-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 395, :column 7, :end-line 395, :end-column 27, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, :name dynomics.space.ui/make-space-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 27, :method-params ([p__651182]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 395, :end-line 395, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, ->t_dynomics$space$ui651085 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__651082 map__651083 state component state-updates meta651086])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651085, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__651082 map__651083 state component state-updates meta651086]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 287, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__651082 map__651083 state component state-updates meta651086])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651189 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([map__651184 selected-nodes current-tool edges pz make-space-component space map__651185 p__651182 node-scale regions map__651183 state compatibilities msgs nodes graph cf meta651190])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651189, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([map__651184 selected-nodes current-tool edges pz make-space-component space map__651185 p__651182 node-scale regions map__651183 state compatibilities msgs nodes graph cf meta651190]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 400, :max-fixed-arity 19, :fn-var true, :arglists (quote ([map__651184 selected-nodes current-tool edges pz make-space-component space map__651185 p__651182 node-scale regions map__651183 state compatibilities msgs nodes graph cf meta651190])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-4 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 149, :column 7, :end-line 149, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-4, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, ->t_dynomics$space$ui651213 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes p__651201 make-prerender-component edges space map__651210 node-scale regions state map__651209 nodes cf meta651214])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651213, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes p__651201 make-prerender-component edges space map__651210 node-scale regions state map__651209 nodes cf meta651214]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 461, :max-fixed-arity 13, :fn-var true, :arglists (quote ([selected-nodes p__651201 make-prerender-component edges space map__651210 node-scale regions state map__651209 nodes cf meta651214])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-3 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 141, :column 7, :end-line 141, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-3, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, make-paths {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 222, :column 7, :end-line 222, :end-column 17, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, :name dynomics.space.ui/make-paths, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 17, :method-params ([p__651045]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, make-node-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 341, :column 7, :end-line 341, :end-column 26, :arglists (quote ([{{[x y] :position, t :type, pt :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, :name dynomics.space.ui/make-node-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__651147]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{[x y] :position, t :type, pt :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, t_dynomics$space$ui651213 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651213, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 461, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651108 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 cx1 ny2 vec__651105 vec__651106 vec__651103 make-edge-component cy2 nx2 vec__651102 cy1 node-scale ny1 cx2 vec__651101 vec__651104 map__651100 compatible? nid2 p__651099 nid1 meta651109])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651108, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 cx1 ny2 vec__651105 vec__651106 vec__651103 make-edge-component cy2 nx2 vec__651102 cy1 node-scale ny1 cx2 vec__651101 vec__651104 map__651100 compatible? nid2 p__651099 nid1 meta651109]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 310, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 cx1 ny2 vec__651105 vec__651106 vec__651103 make-edge-component cy2 nx2 vec__651102 cy1 node-scale ny1 cx2 vec__651101 vec__651104 map__651100 compatible? nid2 p__651099 nid1 meta651109])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, to-coords {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([element-id] [svg-element element])), :doc "Returns a function that converts local coords to\n  those of the given element-id's", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/to-coords, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}, :method-params ([element-id] [svg-element element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([element-id] [svg-element element]), :doc "Returns a function that converts local coords to\n  those of the given element-id's"}, render-to-image {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([] [id])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/render-to-image, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists ([] [id])}, saddle-5 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 158, :column 7, :end-line 158, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-5, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, disable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 61, :column 7, :end-line 61, :end-column 24, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/disable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 24, :method-params ([p__650909]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, ->t_dynomics$space$ui651169 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes map__651165 current-tool pz path y pt map__651163 make-node-component node-scale vec__651164 p__651147 map__651162 msgs id meta651170])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651169, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes map__651165 current-tool pz path y pt map__651163 make-node-component node-scale vec__651164 p__651147 map__651162 msgs id meta651170]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 348, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes map__651165 current-tool pz path y pt map__651163 make-node-component node-scale vec__651164 p__651147 map__651162 msgs id meta651170])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651176 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651176, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 393, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651176 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta651177])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651176, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta651177]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 393, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta651177])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-prerender-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 202, :column 7, :end-line 202, :end-column 26, :arglists (quote ([id type]))}, :name dynomics.space.ui/make-prerender-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([id type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id type]))}, make-handler {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, :name dynomics.space.ui/make-handler, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 19, :method-params ([transform type-key p__651013]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, t_dynomics$space$ui651079 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651079, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 266, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651132 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x vec__651125 vec__651129 y p2 p4 vec__651127 p3 qx qy map__651123 p1 vec__651128 make-open-region-component vec__651124 cx cy node-id p__651122 quadrant-type map__651126 meta651133])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651132, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([x vec__651125 vec__651129 y p2 p4 vec__651127 p3 qx qy map__651123 p1 vec__651128 make-open-region-component vec__651124 cx cy node-id p__651122 quadrant-type map__651126 meta651133]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([x vec__651125 vec__651129 y p2 p4 vec__651127 p3 qx qy map__651123 p1 vec__651128 make-open-region-component vec__651124 cx cy node-id p__651122 quadrant-type map__651126 meta651133])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651155 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651155, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 348, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651198 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651198, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 400, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-open-region-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 321, :column 7, :end-line 321, :end-column 33, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, :name dynomics.space.ui/make-open-region-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 33, :method-params ([p__651122]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, t_dynomics$space$ui651074 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651074, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 266, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651144 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x y p2 p4 p3 qx map__651138 qy map__651135 p1 vec__651136 vec__651140 make-open-region-component vec__651141 cx cy vec__651137 node-id vec__651139 p__651122 quadrant-type meta651145])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651144, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([x y p2 p4 p3 qx map__651138 qy map__651135 p1 vec__651136 vec__651140 make-open-region-component vec__651141 cx cy vec__651137 node-id vec__651139 p__651122 quadrant-type meta651145]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([x y p2 p4 p3 qx map__651138 qy map__651135 p1 vec__651136 vec__651140 make-open-region-component vec__651141 cx cy vec__651137 node-id vec__651139 p__651122 quadrant-type meta651145])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-icon-fn {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 178, :column 7, :end-line 178, :end-column 18, :arglists (quote ([type-id]))}, :name dynomics.space.ui/get-icon-fn, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 18, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, make-type-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 193, :column 7, :end-line 193, :end-column 21, :arglists (quote ([type-id]))}, :name dynomics.space.ui/make-type-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, t_dynomics$space$ui651085 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651085, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 287, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651189 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651189, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 400, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651169 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651169, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 348, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, arrowhead {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 107, :column 7, :end-line 107, :end-column 16, :arglists (quote ([trajectory]))}, :name dynomics.space.ui/arrowhead, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :method-params ([trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trajectory]))}, t_dynomics$space$ui651132 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651132, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui651179 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta651180])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui651179, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta651180]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 393, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta651180])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui651108 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui651108, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 310, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([pz] [])), :doc "Adds a panzoom object to the space", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}}, :name dynomics.space.ui/add-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}, :method-params ([pz] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([pz] []), :doc "Adds a panzoom object to the space"}}, :require-macros {dommy dommy.core, dommy.core dommy.core, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:y :description map__651184 :path nx1 t connections x map__651194 make-node-types-cached-component map__651111 :state-updates selected-nodes make-node-types-palette-component test-component map__651151 :r :space map__651165 :js p__651201 make-prerender-component vec__651114 :fn map__651192 cx1 current-tool edges owner :stability ny2 :verb vec__651105 meta651133 :key pz meta651080 vec__651116 :dont-record :pan-zoom vec__651117 path vec__651125 vec__651129 y :mouse-up state-updates vec__651106 p2 vec__651103 map__651193 :name :as :node-scale make-edge-component p4 :fill vec__651127 p3 :dataurl :tools meta651145 make-space-component pt space :functions :regions :tool map__651210 map__651083 :width meta651180 :control-points meta651190 cy2 p__651071 qx map__651077 :cursor map__651185 :type meta651207 map__651163 nx2 vec__651102 :points p__651182 make-node-component :icon :node meta651156 :node-type :component :node-types :s meta651075 :maxZoom vec__651115 cy1 map__651138 :compatible? :mouse-down map__651148 node-scale :compatibilities map__651072 :tools-order :ml vec__651164 ny1 regions cx2 :keys :event :dynomics vec__651101 :msgs :nodes qy meta651120 vec__651104 map__651183 :ui type :node-id vec__651150 map__651135 :id state map__651100 component :graph map__651123 p1 vec__651128 vec__651136 compatible? :cf vec__651140 p__651147 meta651094 :quadrant-type meta651199 compatibilities :quadrant-vector map__651202 map__651162 map__651091 :position :f make-open-region-component :action :point :mouse-move :t :connections :x vec__651141 :minZoom vec__651113 map__651209 meta651214 vec__651124 :selected-nodes quote :set msgs nodes :arglists map__651203 cx id :keybinding meta651109 cy vec__651137 node-id map__651149 :doc graph vec__651139 meta651177 p__651122 cf quadrant-type nid2 :current-tool p__651082 :edges vec__651112 p__651099 nid1 :height :select meta651086 map__651126 meta651170}, :order [:minZoom :maxZoom :pan-zoom :msgs :current-tool :verb :type :position :event :t :s :r :f :points :js :x :y :width :height :fill :nodes :edges :regions :node-scale :connections :tools :tools-order :state-updates :description :icon :keybinding :fn :action :ui :functions :dynomics :dont-record :select :tool :name :id :dataurl make-node-types-cached-component :arglists :doc quote :keys id type owner p__651071 map__651072 meta651075 map__651077 meta651080 :component :stability :node-types :set :node-type :key make-node-types-palette-component :as component state-updates state p__651082 map__651083 meta651086 map__651091 meta651094 :compatible? nx1 cx1 ny2 vec__651105 vec__651106 vec__651103 make-edge-component nid1 nid2 ny1 nx2 cx2 cy1 cy2 compatible? node-scale vec__651102 vec__651101 vec__651104 map__651100 p__651099 meta651109 map__651111 vec__651114 vec__651116 vec__651117 vec__651115 vec__651113 vec__651112 meta651120 :node-id :quadrant-type :quadrant-vector :point :control-points :ml x vec__651125 vec__651129 y p2 p4 vec__651127 p3 qx qy map__651123 p1 vec__651128 make-open-region-component node-id quadrant-type cx cy vec__651124 p__651122 map__651126 meta651133 map__651138 map__651135 vec__651136 vec__651140 vec__651141 vec__651137 vec__651139 meta651145 :node :selected-nodes :space :mouse-down :path :mouse-up t connections selected-nodes map__651151 current-tool pz path pt make-node-component msgs map__651148 vec__651150 p__651147 map__651149 meta651156 map__651165 map__651163 vec__651164 map__651162 meta651170 test-component meta651177 meta651180 :compatibilities :graph :cf :mouse-move :cursor map__651184 edges make-space-component nodes regions compatibilities graph space cf map__651185 p__651182 map__651183 meta651190 map__651194 map__651192 map__651193 meta651199 p__651201 make-prerender-component map__651202 map__651203 meta651207 map__651210 map__651209 meta651214]}, :doc "\n  This namespace provides components\n  for making the main space UI\n\n  Currently this is implemented with Om/React\n  and SVG, because that was the fastest way\n  to do it. We could move to Canvas or I'm\n  thinking maybe WebGL in future.\n\n  "}