;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.space.ui, :imports nil, :requires {dom om.dom, pz panzoom, dynomics.ui.css dynomics.ui.css, async cljs.core.async, panzoom panzoom, dommy dommy.core, om.dom om.dom, dc dynomics.space.core, cljs.core.async cljs.core.async, dynomics.ui.svg dynomics.ui.svg, uicss dynomics.ui.css, om.core om.core, dommy.core dommy.core, om om.core, dynomics.space.core dynomics.space.core, svg dynomics.ui.svg}, :uses {trs dynomics.ui.svg, input om.dom, radialGradient om.dom, rect om.dom, a om.dom, img om.dom, text om.dom, span om.dom, path om.dom, circle om.dom, P dynomics.space.core, J dynomics.space.core, C dynomics.space.core, c* dynomics.space.core, quadrant-types-colours dynomics.ui.css, canvas om.dom, div om.dom, p2c dynomics.space.core, g om.dom, stop om.dom, line om.dom, defs om.dom, svg om.dom, linearGradient om.dom, put! cljs.core.async}, :defs {toggle-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/toggle-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__883673]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, make-node-types-cached-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 260, :column 7, :end-line 260, :end-column 39, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, :name dynomics.space.ui/make-node-types-cached-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 39, :method-params ([p__883840 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, make-trajectory-group {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 121, :column 7, :end-line 121, :end-column 28, :arglists (quote ([with-arrowhead trajectory]))}, :name dynomics.space.ui/make-trajectory-group, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 28, :method-params ([with-arrowhead trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists (quote ([with-arrowhead trajectory]))}, make-tools-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 239, :column 7, :end-line 239, :end-column 35, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, :name dynomics.space.ui/make-tools-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 35, :method-params ([p__883827]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, ->t_dynomics$space$ui883901 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([vec__883898 x vec__883897 y p2 p4 p3 vec__883894 qx map__883892 vec__883896 qy p1 make-open-region-component p__883891 cx cy node-id map__883895 quadrant-type vec__883893 meta883902])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883901, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([vec__883898 x vec__883897 y p2 p4 p3 vec__883894 qx map__883892 vec__883896 qy p1 make-open-region-component p__883891 cx cy node-id map__883895 quadrant-type vec__883893 meta883902]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([vec__883898 x vec__883897 y p2 p4 p3 vec__883894 qx map__883892 vec__883896 qy p1 make-open-region-component p__883891 cx cy node-id map__883895 quadrant-type vec__883893 meta883902])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-node-types-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 283, :column 7, :end-line 283, :end-column 40, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, :name dynomics.space.ui/make-node-types-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 40, :method-params ([p__883851]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, test-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 399, :column 7, :end-line 399, :end-column 21, :arglists (quote ([x]))}, :name dynomics.space.ui/test-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, make-prerender-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 465, :column 7, :end-line 465, :end-column 31, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, :name dynomics.space.ui/make-prerender-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 31, :method-params ([p__883974]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 465, :end-line 465, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, t_dynomics$space$ui883971 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883971, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 407, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, enable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/enable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__883683]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, t_dynomics$space$ui883913 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883913, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883971 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes map__883967 current-tool edges p__883955 pz make-space-component space node-scale regions map__883965 map__883966 state compatibilities msgs nodes graph cf meta883972])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883971, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes map__883967 current-tool edges p__883955 pz make-space-component space node-scale regions map__883965 map__883966 state compatibilities msgs nodes graph cf meta883972]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 407, :max-fixed-arity 19, :fn-var true, :arglists (quote ([selected-nodes map__883967 current-tool edges p__883955 pz make-space-component space node-scale regions map__883965 map__883966 state compatibilities msgs nodes graph cf meta883972])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, spiral {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 168, :column 7, :end-line 168, :end-column 13, :arglists (quote ([samples expansion rotation] [start init-points samples expansion rotation])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/spiral, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 5, :fn-var true, :arglists ([samples expansion rotation] [start init-points samples expansion rotation])}, t_dynomics$space$ui883901 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883901, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883877 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([vec__883875 nx1 map__883869 vec__883871 cx1 ny2 make-edge-component vec__883873 cy2 nx2 cy1 node-scale ny1 cx2 vec__883872 vec__883870 compatible? p__883868 nid2 vec__883874 nid1 meta883878])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883877, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([vec__883875 nx1 map__883869 vec__883871 cx1 ny2 make-edge-component vec__883873 cy2 nx2 cy1 node-scale ny1 cx2 vec__883872 vec__883870 compatible? p__883868 nid2 vec__883874 nid1 meta883878]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 309, :max-fixed-arity 22, :fn-var true, :arglists (quote ([vec__883875 nx1 map__883869 vec__883871 cx1 ny2 make-edge-component vec__883873 cy2 nx2 cy1 node-scale ny1 cx2 vec__883872 vec__883870 compatible? p__883868 nid2 vec__883874 nid1 meta883878])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-2 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 133, :column 7, :end-line 133, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-2, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, make-edge-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 305, :column 7, :end-line 305, :end-column 26, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, :name dynomics.space.ui/make-edge-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__883868]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 305, :end-line 305, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, make-space-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 402, :column 7, :end-line 402, :end-column 27, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, :name dynomics.space.ui/make-space-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 27, :method-params ([p__883955]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 402, :end-line 402, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, t_dynomics$space$ui883877 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883877, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 309, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui883848 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883848, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-4 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 149, :column 7, :end-line 149, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-4, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, ->t_dynomics$space$ui883952 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta883953])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883952, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta883953]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 400, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta883953])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883986 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__883974 selected-nodes make-prerender-component edges map__883982 space node-scale regions state map__883983 nodes cf meta883987])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883986, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([p__883974 selected-nodes make-prerender-component edges map__883982 space node-scale regions state map__883983 nodes cf meta883987]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 468, :max-fixed-arity 13, :fn-var true, :arglists (quote ([p__883974 selected-nodes make-prerender-component edges map__883982 space node-scale regions state map__883983 nodes cf meta883987])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui883940 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883940, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 348, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-3 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 141, :column 7, :end-line 141, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-3, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, t_dynomics$space$ui883986 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883986, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 468, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883940 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool pz map__883936 path y make-node-component node-scale p__883916 map__883934 node-type msgs id vec__883935 map__883933 meta883941])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883940, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool pz map__883936 path y make-node-component node-scale p__883916 map__883934 node-type msgs id vec__883935 map__883933 meta883941]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 348, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool pz map__883936 path y make-node-component node-scale p__883916 map__883934 node-type msgs id vec__883935 map__883933 meta883941])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-paths {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 221, :column 7, :end-line 221, :end-column 17, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, :name dynomics.space.ui/make-paths, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 17, :method-params ([p__883814]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, t_dynomics$space$ui883924 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883924, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 348, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-node-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 341, :column 7, :end-line 341, :end-column 26, :arglists (quote ([{{[x y] :position, t :type, node-type :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, :name dynomics.space.ui/make-node-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__883916]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{[x y] :position, t :type, node-type :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, ->t_dynomics$space$ui883962 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes map__883958 current-tool edges p__883955 map__883956 pz make-space-component space map__883957 node-scale regions state compatibilities msgs nodes graph cf meta883963])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883962, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes map__883958 current-tool edges p__883955 map__883956 pz make-space-component space map__883957 node-scale regions state compatibilities msgs nodes graph cf meta883963]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 407, :max-fixed-arity 19, :fn-var true, :arglists (quote ([selected-nodes map__883958 current-tool edges p__883955 map__883956 pz make-space-component space map__883957 node-scale regions state compatibilities msgs nodes graph cf meta883963])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883979 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__883974 selected-nodes make-prerender-component edges map__883975 space node-scale regions state map__883976 nodes cf meta883980])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883979, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([p__883974 selected-nodes make-prerender-component edges map__883975 space node-scale regions state map__883976 nodes cf meta883980]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 468, :max-fixed-arity 13, :fn-var true, :arglists (quote ([p__883974 selected-nodes make-prerender-component edges map__883975 space node-scale regions state map__883976 nodes cf meta883980])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, to-coords {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([element-id] [svg-element element])), :doc "Returns a function that converts local coords to\n  those of the given element-id's", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/to-coords, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}, :method-params ([element-id] [svg-element element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([element-id] [svg-element element]), :doc "Returns a function that converts local coords to\n  those of the given element-id's"}, t_dynomics$space$ui883888 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883888, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 309, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883888 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 vec__883885 cx1 vec__883886 ny2 make-edge-component cy2 map__883880 vec__883884 nx2 cy1 node-scale ny1 cx2 compatible? vec__883883 vec__883882 vec__883881 p__883868 nid2 nid1 meta883889])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883888, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 vec__883885 cx1 vec__883886 ny2 make-edge-component cy2 map__883880 vec__883884 nx2 cy1 node-scale ny1 cx2 compatible? vec__883883 vec__883882 vec__883881 p__883868 nid2 nid1 meta883889]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 309, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 vec__883885 cx1 vec__883886 ny2 make-edge-component cy2 map__883880 vec__883884 nx2 cy1 node-scale ny1 cx2 compatible? vec__883883 vec__883882 vec__883881 p__883868 nid2 nid1 meta883889])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, render-to-image {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([] [id])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/render-to-image, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists ([] [id])}, t_dynomics$space$ui883862 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883862, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-5 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 158, :column 7, :end-line 158, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-5, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, t_dynomics$space$ui883854 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883854, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, disable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 61, :column 7, :end-line 61, :end-column 24, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/disable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 24, :method-params ([p__883678]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, t_dynomics$space$ui883979 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883979, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 468, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883854 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__883851 map__883852 state component state-updates meta883855])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883854, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__883851 map__883852 state component state-updates meta883855]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 286, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__883851 map__883852 state component state-updates meta883855])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui883949 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883949, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 400, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883843 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__883840 owner map__883841 id type meta883844])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883843, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__883840 owner map__883841 id type meta883844]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 265, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__883840 owner map__883841 id type meta883844])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-prerender-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 201, :column 7, :end-line 201, :end-column 26, :arglists (quote ([id type]))}, :name dynomics.space.ui/make-prerender-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([id type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id type]))}, t_dynomics$space$ui883843 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883843, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883848 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__883840 owner map__883846 id type meta883849])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883848, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__883840 owner map__883846 id type meta883849]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 265, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__883840 owner map__883846 id type meta883849])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-handler {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, :name dynomics.space.ui/make-handler, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 19, :method-params ([transform type-key p__883782]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, ->t_dynomics$space$ui883862 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__883851 map__883860 state component state-updates meta883863])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883862, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__883851 map__883860 state component state-updates meta883863]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 286, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__883851 map__883860 state component state-updates meta883863])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-open-region-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 321, :column 7, :end-line 321, :end-column 33, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, :name dynomics.space.ui/make-open-region-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 33, :method-params ([p__883891]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, ->t_dynomics$space$ui883913 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x map__883904 map__883907 y vec__883909 p2 p4 vec__883906 p3 vec__883905 qx qy p1 make-open-region-component vec__883910 p__883891 cx cy node-id quadrant-type vec__883908 meta883914])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883913, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([x map__883904 map__883907 y vec__883909 p2 p4 vec__883906 p3 vec__883905 qx qy p1 make-open-region-component vec__883910 p__883891 cx cy node-id quadrant-type vec__883908 meta883914]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([x map__883904 map__883907 y vec__883909 p2 p4 vec__883906 p3 vec__883905 qx qy p1 make-open-region-component vec__883910 p__883891 cx cy node-id quadrant-type vec__883908 meta883914])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-icon-fn {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 178, :column 7, :end-line 178, :end-column 18, :arglists (quote ([type-id]))}, :name dynomics.space.ui/get-icon-fn, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 18, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, make-type-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 193, :column 7, :end-line 193, :end-column 21, :arglists (quote ([type-id]))}, :name dynomics.space.ui/make-type-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, ->t_dynomics$space$ui883949 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta883950])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883949, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta883950]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 400, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta883950])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui883924 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool pz vec__883919 path y make-node-component node-scale p__883916 node-type map__883917 map__883918 msgs id map__883920 meta883925])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui883924, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool pz vec__883919 path y make-node-component node-scale p__883916 node-type map__883917 map__883918 msgs id map__883920 meta883925]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 348, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool pz vec__883919 path y make-node-component node-scale p__883916 node-type map__883917 map__883918 msgs id map__883920 meta883925])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, arrowhead {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 107, :column 7, :end-line 107, :end-column 16, :arglists (quote ([trajectory]))}, :name dynomics.space.ui/arrowhead, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :method-params ([trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trajectory]))}, t_dynomics$space$ui883962 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883962, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 407, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([pz] [])), :doc "Adds a panzoom object to the space", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}}, :name dynomics.space.ui/add-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}, :method-params ([pz] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([pz] []), :doc "Adds a panzoom object to the space"}, t_dynomics$space$ui883952 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui883952, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 400, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {dommy dommy.core, dommy.core dommy.core, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{vec__883898 :y :description vec__883875 p__883974 :path nx1 t connections x map__883904 make-node-types-cached-component :state-updates selected-nodes map__883869 make-node-types-palette-component test-component map__883958 :r :space :js vec__883885 map__883967 vec__883871 meta883963 make-prerender-component :fn cx1 current-tool edges owner meta883914 map__883860 :stability vec__883886 ny2 map__883982 meta883844 :verb p__883955 map__883956 meta883849 :key pz :dont-record :pan-zoom map__883907 vec__883919 vec__883897 map__883936 path map__883975 y meta883902 :mouse-up vec__883909 state-updates map__883852 p2 map__883841 :name meta883941 :as :node-scale make-edge-component vec__883873 p4 vec__883906 :fill p3 :dataurl :tools p__883840 make-space-component space :functions meta883863 :regions :tool vec__883905 vec__883894 :width meta883889 map__883957 :control-points cy2 qx map__883880 meta883987 :cursor vec__883884 :type nx2 :points make-node-component :icon :node :node-type :component :node-types :s :maxZoom cy1 :compatible? meta883855 :mouse-down meta883972 node-scale p__883916 :compatibilities meta883980 :tools-order :ml ny1 regions cx2 map__883892 map__883934 meta883950 vec__883896 :keys :event :dynomics :msgs :nodes qy meta883878 map__883965 :ui type vec__883872 :node-id vec__883870 map__883966 :id state node-type component map__883976 map__883846 :graph p1 compatible? :cf map__883917 meta883925 :quadrant-type meta883953 compatibilities :quadrant-vector :position :f make-open-region-component :action :point map__883918 :quadrants :mouse-move :t :connections :x vec__883910 vec__883883 :minZoom p__883891 :selected-nodes map__883983 quote :set msgs nodes :arglists cx id :keybinding map__883920 cy node-id :doc graph vec__883882 vec__883881 vec__883935 map__883895 cf map__883933 p__883868 quadrant-type nid2 :current-tool :edges vec__883893 vec__883874 nid1 vec__883908 :height :select p__883851}, :order [:minZoom :maxZoom :pan-zoom :msgs :current-tool :verb :type :position :event :t :s :r :f :points :js :x :y :width :height :fill :nodes :edges :regions :node-scale :connections :tools :tools-order :state-updates :description :icon :keybinding :fn :action :ui :functions :dynomics :dont-record :select :tool :name :id :dataurl make-node-types-cached-component :arglists :doc quote :keys id type owner p__883840 map__883841 meta883844 map__883846 meta883849 :component :stability :node-types :set :node-type :key make-node-types-palette-component :as component state-updates state p__883851 map__883852 meta883855 map__883860 meta883863 :compatible? vec__883875 nx1 map__883869 vec__883871 cx1 ny2 make-edge-component nid1 nid2 ny1 nx2 cx2 cy1 cy2 compatible? node-scale vec__883873 vec__883872 vec__883870 p__883868 vec__883874 meta883878 vec__883885 vec__883886 map__883880 vec__883884 vec__883883 vec__883882 vec__883881 meta883889 :node-id :quadrant-type :quadrant-vector :point :control-points :ml vec__883898 x vec__883897 y p2 p4 p3 vec__883894 qx map__883892 vec__883896 qy p1 make-open-region-component node-id quadrant-type cx cy p__883891 map__883895 vec__883893 meta883902 map__883904 map__883907 vec__883909 vec__883906 vec__883905 vec__883910 vec__883908 meta883914 :node :selected-nodes :space :mouse-down :path :mouse-up :quadrants t connections selected-nodes current-tool pz vec__883919 path make-node-component node-type msgs p__883916 map__883917 map__883918 map__883920 meta883925 map__883936 map__883934 vec__883935 map__883933 meta883941 test-component meta883950 meta883953 :compatibilities :graph :cf :mouse-move :cursor map__883958 edges p__883955 map__883956 make-space-component nodes regions compatibilities graph space cf map__883957 meta883963 map__883967 map__883965 map__883966 meta883972 p__883974 make-prerender-component map__883975 map__883976 meta883980 map__883982 map__883983 meta883987]}, :doc "\n  This namespace provides components\n  for making the main space UI\n\n  Currently this is implemented with Om/React\n  and SVG, because that was the fastest way\n  to do it. We could move to Canvas or I'm\n  thinking maybe WebGL in future.\n\n  "}