;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.space.ui, :imports nil, :requires {dom om.dom, pz panzoom, dynomics.ui.css dynomics.ui.css, async cljs.core.async, panzoom panzoom, dommy dommy.core, om.dom om.dom, dc dynomics.space.core, cljs.core.async cljs.core.async, dynomics.ui.svg dynomics.ui.svg, uicss dynomics.ui.css, om.core om.core, dommy.core dommy.core, om om.core, dynomics.space.core dynomics.space.core, svg dynomics.ui.svg}, :uses {trs dynomics.ui.svg, input om.dom, rect om.dom, a om.dom, img om.dom, text om.dom, span om.dom, path om.dom, circle om.dom, canvas om.dom, div om.dom, g om.dom, line om.dom, svg om.dom, put! cljs.core.async}, :defs {toggle-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/toggle-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__1890303]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, make-trajectory-group {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 116, :column 7, :end-line 116, :end-column 28, :arglists (quote ([with-arrowhead trajectory]))}, :name dynomics.space.ui/make-trajectory-group, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 28, :method-params ([with-arrowhead trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 2, :fn-var true, :arglists (quote ([with-arrowhead trajectory]))}, make-tools-palette-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 164, :column 7, :end-line 164, :end-column 35, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, :name dynomics.space.ui/make-tools-palette-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 35, :method-params ([p__1890441]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, make-node-types-palette-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 185, :column 7, :end-line 185, :end-column 40, :arglists (quote ([{:keys [component state-updates]}])), :doc "Returns a component for the node types palette"}, :name dynomics.space.ui/make-node-types-palette-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 40, :method-params ([p__1890454]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [component state-updates]}])), :doc "Returns a component for the node types palette"}, t_dynomics$space$ui1890491 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890491, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 213, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, test-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 275, :column 7, :end-line 275, :end-column 21, :arglists (quote ([x]))}, :name dynomics.space.ui/test-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->t_dynomics$space$ui1890502 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool pz path y map__1890496 pt make-node-component node-scale vec__1890497 map__1890495 p__1890494 msgs id map__1890498 meta1890503])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890502, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool pz path y map__1890496 pt make-node-component node-scale vec__1890497 map__1890495 p__1890494 msgs id map__1890498 meta1890503]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 231, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool pz path y map__1890496 pt make-node-component node-scale vec__1890497 map__1890495 p__1890494 msgs id map__1890498 meta1890503])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui1890457 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__1890454 map__1890455 component state-updates meta1890458])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890457, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__1890454 map__1890455 component state-updates meta1890458]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 188, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-node-types-palette-component p__1890454 map__1890455 component state-updates meta1890458])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890502 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890502, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 231, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-prerender-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 346, :column 7, :end-line 346, :end-column 31, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, :name dynomics.space.ui/make-prerender-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 31, :method-params ([p__1890564]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, ->t_dynomics$space$ui1890480 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 cx1 ny2 vec__1890474 vec__1890473 make-edge-component cy2 nx2 cy1 vec__1890478 node-scale ny1 cx2 map__1890472 compatible? vec__1890475 p__1890471 vec__1890477 vec__1890476 nid2 nid1 meta1890481])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890480, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 cx1 ny2 vec__1890474 vec__1890473 make-edge-component cy2 nx2 cy1 vec__1890478 node-scale ny1 cx2 map__1890472 compatible? vec__1890475 p__1890471 vec__1890477 vec__1890476 nid2 nid1 meta1890481]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 213, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 cx1 ny2 vec__1890474 vec__1890473 make-edge-component cy2 nx2 cy1 vec__1890478 node-scale ny1 cx2 map__1890472 compatible? vec__1890475 p__1890471 vec__1890477 vec__1890476 nid2 nid1 meta1890481])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, enable-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/enable-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__1890313]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, t_dynomics$space$ui1890569 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890569, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 349, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-edge-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 209, :column 7, :end-line 209, :end-column 26, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, :name dynomics.space.ui/make-edge-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__1890471]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, ->t_dynomics$space$ui1890576 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes make-prerender-component edges space map__1890572 node-scale regions state map__1890573 p__1890564 nodes cf meta1890577])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890576, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes make-prerender-component edges space map__1890572 node-scale regions state map__1890573 p__1890564 nodes cf meta1890577]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 349, :max-fixed-arity 13, :fn-var true, :arglists (quote ([selected-nodes make-prerender-component edges space map__1890572 node-scale regions state map__1890573 p__1890564 nodes cf meta1890577])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890553 {:num-fields 18, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890553, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 283, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-space-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 278, :column 7, :end-line 278, :end-column 27, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, :name dynomics.space.ui/make-space-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 27, :method-params ([p__1890529]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, ->t_dynomics$space$ui1890491 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 cx1 ny2 map__1890483 vec__1890489 vec__1890485 make-edge-component cy2 nx2 vec__1890484 cy1 node-scale ny1 cx2 vec__1890488 compatible? p__1890471 vec__1890486 vec__1890487 nid2 nid1 meta1890492])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890491, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 cx1 ny2 map__1890483 vec__1890489 vec__1890485 make-edge-component cy2 nx2 vec__1890484 cy1 node-scale ny1 cx2 vec__1890488 compatible? p__1890471 vec__1890486 vec__1890487 nid2 nid1 meta1890492]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 213, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 cx1 ny2 map__1890483 vec__1890489 vec__1890485 make-edge-component cy2 nx2 vec__1890484 cy1 node-scale ny1 cx2 vec__1890488 compatible? p__1890471 vec__1890486 vec__1890487 nid2 nid1 meta1890492])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890536 {:num-fields 18, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890536, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 283, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890523 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890523, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 276, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui1890465 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__1890454 map__1890463 component state-updates meta1890466])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890465, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__1890454 map__1890463 component state-updates meta1890466]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 188, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-node-types-palette-component p__1890454 map__1890463 component state-updates meta1890466])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890526 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890526, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 276, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-paths {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 146, :column 7, :end-line 146, :end-column 17, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, :name dynomics.space.ui/make-paths, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 17, :method-params ([p__1890428]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, make-node-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 224, :column 7, :end-line 224, :end-column 26, :arglists (quote ([{{[x y] :position, t :type, pt :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, :name dynomics.space.ui/make-node-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__1890494]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{[x y] :position, t :type, pt :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, ->t_dynomics$space$ui1890553 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes map__1890547 current-tool edges pz p__1890529 make-space-component space node-scale map__1890549 regions map__1890548 state compatibilities msgs nodes cf meta1890554])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890553, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes map__1890547 current-tool edges pz p__1890529 make-space-component space node-scale map__1890549 regions map__1890548 state compatibilities msgs nodes cf meta1890554]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 283, :max-fixed-arity 18, :fn-var true, :arglists (quote ([selected-nodes map__1890547 current-tool edges pz p__1890529 make-space-component space node-scale map__1890549 regions map__1890548 state compatibilities msgs nodes cf meta1890554])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, to-coords {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([element-id] [svg-element element])), :doc "Returns a function that converts local coords to\n  those of the given element-id's", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/to-coords, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}, :method-params ([element-id] [svg-element element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([element-id] [svg-element element]), :doc "Returns a function that converts local coords to\n  those of the given element-id's"}, render-to-image {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([] [svg-selector])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [svg-selector]), :arglists ([] [svg-selector]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/render-to-image, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [svg-selector]), :arglists ([] [svg-selector]), :arglists-meta (nil nil)}, :method-params ([] [svg-selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists ([] [svg-selector])}, disable-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 61, :column 7, :end-line 61, :end-column 24, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/disable-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 24, :method-params ([p__1890308]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, ->t_dynomics$space$ui1890516 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes vec__1890511 current-tool pz map__1890510 path y pt make-node-component map__1890512 node-scale p__1890494 map__1890509 msgs id meta1890517])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890516, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes vec__1890511 current-tool pz map__1890510 path y pt make-node-component map__1890512 node-scale p__1890494 map__1890509 msgs id meta1890517]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 231, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes vec__1890511 current-tool pz map__1890510 path y pt make-node-component map__1890512 node-scale p__1890494 map__1890509 msgs id meta1890517])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-handler {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 91, :column 7, :end-line 91, :end-column 19, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, :name dynomics.space.ui/make-handler, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 19, :method-params ([transform type-key p__1890412]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, ->t_dynomics$space$ui1890569 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes make-prerender-component edges map__1890566 space node-scale regions map__1890565 state p__1890564 nodes cf meta1890570])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890569, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes make-prerender-component edges map__1890566 space node-scale regions map__1890565 state p__1890564 nodes cf meta1890570]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 349, :max-fixed-arity 13, :fn-var true, :arglists (quote ([selected-nodes make-prerender-component edges map__1890566 space node-scale regions map__1890565 state p__1890564 nodes cf meta1890570])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui1890526 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta1890527])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890526, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta1890527]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 276, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta1890527])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890516 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890516, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 231, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui1890536 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes current-tool edges pz p__1890529 make-space-component space node-scale regions state map__1890532 compatibilities map__1890531 map__1890530 msgs nodes cf meta1890537])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890536, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes current-tool edges pz p__1890529 make-space-component space node-scale regions state map__1890532 compatibilities map__1890531 map__1890530 msgs nodes cf meta1890537]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 283, :max-fixed-arity 18, :fn-var true, :arglists (quote ([selected-nodes current-tool edges pz p__1890529 make-space-component space node-scale regions state map__1890532 compatibilities map__1890531 map__1890530 msgs nodes cf meta1890537])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-type-icon {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 128, :column 7, :end-line 128, :end-column 21, :arglists (quote ([type-id] [type-id n-samples expansion rotation])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([type-id] [type-id n-samples expansion rotation]), :arglists ([type-id] [type-id n-samples expansion rotation]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/make-type-icon, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([type-id] [type-id n-samples expansion rotation]), :arglists ([type-id] [type-id n-samples expansion rotation]), :arglists-meta (nil nil)}, :method-params ([type-id] [type-id n-samples expansion rotation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 4, :fn-var true, :arglists ([type-id] [type-id n-samples expansion rotation])}, t_dynomics$space$ui1890465 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890465, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 188, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890576 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890576, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 349, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, arrowhead {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 102, :column 7, :end-line 102, :end-column 16, :arglists (quote ([trajectory]))}, :name dynomics.space.ui/arrowhead, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 16, :method-params ([trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trajectory]))}, t_dynomics$space$ui1890480 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890480, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 213, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui1890457 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui1890457, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 188, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([pz] [])), :doc "Adds a panzoom object to the space", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}}, :name dynomics.space.ui/add-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}, :method-params ([pz] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([pz] []), :doc "Adds a panzoom object to the space"}, ->t_dynomics$space$ui1890523 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta1890524])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui1890523, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta1890524]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 276, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta1890524])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {dommy dommy.core, dommy.core dommy.core, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:description :path nx1 t connections x :state-updates selected-nodes make-node-types-palette-component map__1890547 test-component meta1890492 :r vec__1890511 :space make-prerender-component :fn cx1 current-tool edges :stability ny2 vec__1890474 map__1890483 :verb meta1890577 vec__1890489 :key pz p__1890529 :dont-record :pan-zoom map__1890566 meta1890524 map__1890510 meta1890458 path y :mouse-up vec__1890473 state-updates map__1890496 meta1890517 map__1890455 vec__1890485 :name :as :node-scale make-edge-component :tools make-space-component pt space :functions :regions :tool map__1890463 meta1890537 p__1890454 meta1890466 cy2 meta1890481 :cursor :type nx2 :points meta1890554 vec__1890484 make-node-component :icon :node :node-type :component :node-types :s :maxZoom cy1 :compatible? :mouse-down map__1890572 map__1890512 meta1890570 vec__1890478 node-scale :compatibilities map__1890549 vec__1890497 :tools-order ny1 regions cx2 vec__1890488 :keys :event :dynomics map__1890548 :msgs :nodes map__1890565 :ui meta1890527 :#prerender_svg :id state component map__1890495 map__1890472 meta1890503 compatible? :cf map__1890532 vec__1890475 map__1890573 p__1890471 compatibilities vec__1890486 :position map__1890531 map__1890530 :action p__1890494 map__1890509 :mouse-move :t :connections :minZoom vec__1890477 p__1890564 :selected-nodes quote :set msgs nodes :arglists id :keybinding vec__1890487 map__1890498 :doc vec__1890476 cf nid2 :current-tool :edges nid1 :select}, :order [:minZoom :maxZoom :pan-zoom :#prerender_svg :msgs :current-tool :verb :type :position :event :t :s :r :points :nodes :edges :regions :node-scale :connections :tools :tools-order :state-updates :description :icon :keybinding :fn :action :ui :functions :dynomics :dont-record :select :tool :name :component :id :stability :node-types :set :node-type make-node-types-palette-component :arglists :doc quote :keys component state-updates p__1890454 map__1890455 meta1890458 map__1890463 meta1890466 :compatible? nx1 cx1 ny2 vec__1890474 vec__1890473 make-edge-component nid1 nid2 ny1 nx2 cx2 cy1 cy2 compatible? node-scale vec__1890478 map__1890472 vec__1890475 p__1890471 vec__1890477 vec__1890476 meta1890481 map__1890483 vec__1890489 vec__1890485 vec__1890484 vec__1890488 vec__1890486 vec__1890487 meta1890492 :node :selected-nodes :space :mouse-down :path :mouse-up t connections x selected-nodes current-tool pz path y map__1890496 pt make-node-component id msgs vec__1890497 map__1890495 p__1890494 map__1890498 meta1890503 vec__1890511 map__1890510 map__1890512 map__1890509 meta1890517 test-component meta1890524 meta1890527 :compatibilities :cf :mouse-move :key :cursor edges p__1890529 make-space-component :as nodes regions compatibilities space cf state map__1890532 map__1890531 map__1890530 meta1890537 map__1890547 map__1890549 map__1890548 meta1890554 make-prerender-component map__1890566 map__1890565 p__1890564 meta1890570 map__1890572 map__1890573 meta1890577]}, :doc "\n  This namespace provides components\n  for making the main space UI\n\n  Currently this is implemented with Om/React\n  and SVG, because that was the fastest way\n  to do it. We could move to Canvas or I'm\n  thinking maybe WebGL in future.\n\n  "}