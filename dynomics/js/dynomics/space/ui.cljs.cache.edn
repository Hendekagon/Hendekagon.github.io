;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.space.ui, :imports nil, :requires {dom om.dom, pz panzoom, dynomics.ui.css dynomics.ui.css, async cljs.core.async, panzoom panzoom, dommy dommy.core, om.dom om.dom, dc dynomics.space.core, cljs.core.async cljs.core.async, dynomics.ui.svg dynomics.ui.svg, uicss dynomics.ui.css, om.core om.core, dommy.core dommy.core, om om.core, dynomics.space.core dynomics.space.core, svg dynomics.ui.svg}, :uses {trs dynomics.ui.svg, input om.dom, rect om.dom, a om.dom, img om.dom, text om.dom, span om.dom, path om.dom, circle om.dom, canvas om.dom, div om.dom, g om.dom, line om.dom, svg om.dom, put! cljs.core.async}, :defs {->t_dynomics$space$ui381674 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta381675])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381674, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta381675]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 272, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta381675])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381717 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes make-prerender-component edges space map__381714 node-scale regions state map__381713 nodes cf p__381712 meta381718])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381717, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes make-prerender-component edges space map__381714 node-scale regions state map__381713 nodes cf p__381712 meta381718]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 335, :max-fixed-arity 13, :fn-var true, :arglists (quote ([selected-nodes make-prerender-component edges space map__381714 node-scale regions state map__381713 nodes cf p__381712 meta381718])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, toggle-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/toggle-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__381453]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, make-trajectory-group {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 115, :column 7, :end-line 115, :end-column 28, :arglists (quote ([with-arrowhead trajectory]))}, :name dynomics.space.ui/make-trajectory-group, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 28, :method-params ([with-arrowhead trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([with-arrowhead trajectory]))}, make-tools-palette-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 153, :column 7, :end-line 153, :end-column 35, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, :name dynomics.space.ui/make-tools-palette-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 35, :method-params ([p__381589]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, make-node-types-palette-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 174, :column 7, :end-line 174, :end-column 40, :arglists (quote ([{:keys [component state-updates]}])), :doc "Returns a component for the node types palette"}, :name dynomics.space.ui/make-node-types-palette-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 40, :method-params ([p__381602]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [component state-updates]}])), :doc "Returns a component for the node types palette"}, test-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 271, :column 7, :end-line 271, :end-column 21, :arglists (quote ([x]))}, :name dynomics.space.ui/test-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, make-prerender-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 331, :column 7, :end-line 331, :end-column 31, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, :name dynomics.space.ui/make-prerender-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 31, :method-params ([p__381712]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 331, :end-line 331, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, ->t_dynomics$space$ui381650 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool pz map__381644 path y vec__381645 pt map__381646 map__381643 make-node-component node-scale p__381642 msgs id meta381651])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381650, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool pz map__381644 path y vec__381645 pt map__381646 map__381643 make-node-component node-scale p__381642 msgs id meta381651]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 220, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool pz map__381644 path y vec__381645 pt map__381646 map__381643 make-node-component node-scale p__381642 msgs id meta381651])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, enable-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/enable-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__381463]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, t_dynomics$space$ui381724 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381724, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 335, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui381628 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381628, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 202, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381671 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta381672])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381671, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta381672]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 272, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta381672])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381613 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__381602 map__381611 component state-updates meta381614])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381613, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__381602 map__381611 component state-updates meta381614]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 177, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-node-types-palette-component p__381602 map__381611 component state-updates meta381614])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui381684 {:num-fields 18, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381684, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 279, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-edge-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 198, :column 7, :end-line 198, :end-column 26, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatable? :compatable?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, :name dynomics.space.ui/make-edge-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__381619]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatable? :compatable?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, t_dynomics$space$ui381674 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381674, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 272, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-space-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 274, :column 7, :end-line 274, :end-column 27, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatabilities node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, :name dynomics.space.ui/make-space-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 27, :method-params ([p__381677]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatabilities node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, t_dynomics$space$ui381639 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381639, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 202, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381628 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 vec__381626 map__381620 cx1 ny2 make-edge-component vec__381624 vec__381622 p__381619 cy2 nx2 cy1 node-scale vec__381625 ny1 cx2 vec__381623 compatable? vec__381621 nid2 nid1 meta381629])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381628, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 vec__381626 map__381620 cx1 ny2 make-edge-component vec__381624 vec__381622 p__381619 cy2 nx2 cy1 node-scale vec__381625 ny1 cx2 vec__381623 compatable? vec__381621 nid2 nid1 meta381629]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 202, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 vec__381626 map__381620 cx1 ny2 make-edge-component vec__381624 vec__381622 p__381619 cy2 nx2 cy1 node-scale vec__381625 ny1 cx2 vec__381623 compatable? vec__381621 nid2 nid1 meta381629])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui381650 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381650, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 220, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-paths {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 135, :column 7, :end-line 135, :end-column 17, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, :name dynomics.space.ui/make-paths, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 17, :method-params ([p__381576]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, make-node-component {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 213, :column 7, :end-line 213, :end-column 26, :arglists (quote ([{{[x y] :position, t :type, pt :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, :name dynomics.space.ui/make-node-component, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__381642]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{[x y] :position, t :type, pt :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, t_dynomics$space$ui381613 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381613, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 177, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, to-coords {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([element-id] [svg-element element])), :doc "Returns a function that converts local coords to\n  those of the given element-id's", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/to-coords, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}, :method-params ([element-id] [svg-element element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([element-id] [svg-element element]), :doc "Returns a function that converts local coords to\n  those of the given element-id's"}, render-to-image {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([] [svg-selector])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [svg-selector]), :arglists ([] [svg-selector]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/render-to-image, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [svg-selector]), :arglists ([] [svg-selector]), :arglists-meta (nil nil)}, :method-params ([] [svg-selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists ([] [svg-selector])}, disable-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 61, :column 7, :end-line 61, :end-column 24, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/disable-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 24, :method-params ([p__381458]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, t_dynomics$space$ui381605 {:num-fields 6, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381605, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 177, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381664 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool pz path y map__381660 map__381657 pt make-node-component node-scale map__381658 vec__381659 p__381642 msgs id meta381665])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381664, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool pz path y map__381660 map__381657 pt make-node-component node-scale map__381658 vec__381659 p__381642 msgs id meta381665]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 220, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool pz path y map__381660 map__381657 pt make-node-component node-scale map__381658 vec__381659 p__381642 msgs id meta381665])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381701 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes p__381677 current-tool edges pz map__381696 make-space-component map__381695 space node-scale regions map__381697 state compatabilities msgs nodes cf meta381702])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381701, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes p__381677 current-tool edges pz map__381696 make-space-component map__381695 space node-scale regions map__381697 state compatabilities msgs nodes cf meta381702]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 279, :max-fixed-arity 18, :fn-var true, :arglists (quote ([selected-nodes p__381677 current-tool edges pz map__381696 make-space-component map__381695 space node-scale regions map__381697 state compatabilities msgs nodes cf meta381702])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-handler {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 92, :column 7, :end-line 92, :end-column 19, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, :name dynomics.space.ui/make-handler, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 19, :method-params ([transform type-key p__381562]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, t_dynomics$space$ui381717 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381717, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 335, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-type-icon {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 127, :column 7, :end-line 127, :end-column 21, :arglists (quote ([type-id] [type-id n-points expansion rotation])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([type-id] [type-id n-points expansion rotation]), :arglists ([type-id] [type-id n-points expansion rotation]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/make-type-icon, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([type-id] [type-id n-points expansion rotation]), :arglists ([type-id] [type-id n-points expansion rotation]), :arglists-meta (nil nil)}, :method-params ([type-id] [type-id n-points expansion rotation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 4, :fn-var true, :arglists ([type-id] [type-id n-points expansion rotation])}, t_dynomics$space$ui381701 {:num-fields 18, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381701, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 279, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381684 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes p__381677 current-tool edges pz map__381680 make-space-component space map__381679 node-scale regions state compatabilities map__381678 msgs nodes cf meta381685])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381684, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes p__381677 current-tool edges pz map__381680 make-space-component space map__381679 node-scale regions state compatabilities map__381678 msgs nodes cf meta381685]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 279, :max-fixed-arity 18, :fn-var true, :arglists (quote ([selected-nodes p__381677 current-tool edges pz map__381680 make-space-component space map__381679 node-scale regions state compatabilities map__381678 msgs nodes cf meta381685])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, arrowhead {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 103, :column 7, :end-line 103, :end-column 16, :arglists (quote ([trajectory]))}, :name dynomics.space.ui/arrowhead, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 16, :method-params ([trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trajectory]))}, ->t_dynomics$space$ui381639 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 cx1 ny2 vec__381636 make-edge-component vec__381637 p__381619 vec__381635 cy2 vec__381633 nx2 cy1 node-scale ny1 cx2 vec__381632 vec__381634 compatable? map__381631 nid2 nid1 meta381640])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381639, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 cx1 ny2 vec__381636 make-edge-component vec__381637 p__381619 vec__381635 cy2 vec__381633 nx2 cy1 node-scale ny1 cx2 vec__381632 vec__381634 compatable? map__381631 nid2 nid1 meta381640]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 202, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 cx1 ny2 vec__381636 make-edge-component vec__381637 p__381619 vec__381635 cy2 vec__381633 nx2 cy1 node-scale ny1 cx2 vec__381632 vec__381634 compatable? map__381631 nid2 nid1 meta381640])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui381664 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381664, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 220, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui381671 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui381671, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 272, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-pan-zoom! {:protocol-inline nil, :meta {:file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([pz] [])), :doc "Adds a panzoom object to the space", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}}, :name dynomics.space.ui/add-pan-zoom!, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}, :method-params ([pz] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([pz] []), :doc "Adds a panzoom object to the space"}, ->t_dynomics$space$ui381605 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__381602 map__381603 component state-updates meta381606])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381605, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__381602 map__381603 component state-updates meta381606]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 177, :max-fixed-arity 6, :fn-var true, :arglists (quote ([make-node-types-palette-component p__381602 map__381603 component state-updates meta381606])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui381724 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([map__381720 selected-nodes make-prerender-component edges space map__381721 node-scale regions state nodes cf p__381712 meta381725])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui381724, :variadic false, :file "/home/mchadwick/projects/dynomics/src/dynomics/space/ui.cljs", :method-params ([map__381720 selected-nodes make-prerender-component edges space map__381721 node-scale regions state nodes cf p__381712 meta381725]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 335, :max-fixed-arity 13, :fn-var true, :arglists (quote ([map__381720 selected-nodes make-prerender-component edges space map__381721 node-scale regions state nodes cf p__381712 meta381725])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {dommy dommy.core, dommy.core dommy.core, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:description :path nx1 map__381720 t connections x :state-updates selected-nodes p__381677 make-node-types-palette-component vec__381626 test-component :space map__381620 make-prerender-component :fn cx1 current-tool edges :stability ny2 :verb :key pz :dont-record :pan-zoom meta381606 vec__381636 map__381644 path y :mouse-up map__381696 state-updates map__381680 map__381660 vec__381645 map__381657 :name :as :node-scale make-edge-component vec__381624 :tools make-space-component vec__381637 pt map__381695 meta381675 space :functions :regions :tool vec__381622 p__381619 vec__381635 cy2 map__381646 vec__381633 map__381643 map__381679 :cursor :type nx2 :points map__381721 make-node-component :icon :dynamics :node :node-type :component :node-types :s :compatabilities meta381702 :maxZoom cy1 map__381714 :mouse-down node-scale vec__381625 :tools-order map__381611 ny1 regions cx2 :keys :event :msgs :nodes :ui :#prerender_svg :compatable? :id map__381697 state meta381672 component meta381665 p__381602 vec__381632 meta381725 map__381658 meta381614 :cf compatabilities map__381603 meta381718 map__381713 meta381685 meta381651 :position :action vec__381659 vec__381623 :mouse-move :t :connections vec__381634 :without-arrowhead map__381678 :minZoom p__381642 :selected-nodes quote :set msgs meta381640 nodes :arglists compatable? id :keybinding map__381631 vec__381621 :doc cf nid2 :current-tool :edges nid1 meta381629 :select p__381712}, :order [:minZoom :maxZoom :pan-zoom :#prerender_svg :msgs :current-tool :verb :type :position :event :without-arrowhead :nodes :edges :regions :node-scale :connections :tools :tools-order :state-updates :description :icon :keybinding :fn :action :ui :functions :dynamics :dont-record :select :tool :name :component :id :stability :node-types :set :node-type make-node-types-palette-component :arglists :doc quote :keys component state-updates p__381602 map__381603 meta381606 map__381611 meta381614 :points :compatable? nx1 vec__381626 map__381620 cx1 ny2 make-edge-component nid1 nid2 ny1 nx2 cx2 cy1 cy2 compatable? node-scale vec__381624 vec__381622 p__381619 vec__381625 vec__381623 vec__381621 meta381629 vec__381636 vec__381637 vec__381635 vec__381633 vec__381632 vec__381634 map__381631 meta381640 :node :selected-nodes :space :t :s :mouse-down :path :mouse-up t connections x selected-nodes current-tool pz map__381644 path y vec__381645 pt map__381646 map__381643 make-node-component id msgs p__381642 meta381651 map__381660 map__381657 map__381658 vec__381659 meta381665 test-component meta381672 meta381675 :compatabilities :cf :mouse-move :key :cursor p__381677 edges map__381680 make-space-component :as nodes regions compatabilities space cf state map__381679 map__381678 meta381685 map__381696 map__381695 map__381697 meta381702 make-prerender-component map__381714 map__381713 p__381712 meta381718 map__381720 map__381721 meta381725]}, :doc "\n  This namespace provides components\n  for making the main space UI\n\n  Currently this is implemented with Om/React\n  and SVG, because that was the fastest way\n  to do it. We could move to Canvas or I'm\n  thinking maybe WebGL in future.\n\n  "}