;; Analyzed by ClojureScript 1.7.170
{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name dynomics.space.ui, :imports nil, :requires {dom om.dom, pz panzoom, dynomics.ui.css dynomics.ui.css, async cljs.core.async, panzoom panzoom, dommy dommy.core, om.dom om.dom, dc dynomics.space.core, cljs.core.async cljs.core.async, dynomics.ui.svg dynomics.ui.svg, uicss dynomics.ui.css, om.core om.core, dommy.core dommy.core, om om.core, dynomics.space.core dynomics.space.core, svg dynomics.ui.svg}, :uses {trs dynomics.ui.svg, input om.dom, radialGradient om.dom, rect om.dom, a om.dom, img om.dom, text om.dom, span om.dom, path om.dom, circle om.dom, P dynomics.space.core, J dynomics.space.core, C dynomics.space.core, c* dynomics.space.core, quadrant-types-colours dynomics.ui.css, canvas om.dom, div om.dom, p2c dynomics.space.core, g om.dom, stop om.dom, line om.dom, defs om.dom, svg om.dom, linearGradient om.dom, put! cljs.core.async}, :defs {->t_dynomics$space$ui53550 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes current-tool edges pz make-space-component space map__53545 node-scale regions p__53543 state compatibilities msgs nodes graph cf map__53544 map__53546 meta53551])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53550, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes current-tool edges pz make-space-component space map__53545 node-scale regions p__53543 state compatibilities msgs nodes graph cf map__53544 map__53546 meta53551]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 419, :max-fixed-arity 19, :fn-var true, :arglists (quote ([selected-nodes current-tool edges pz make-space-component space map__53545 node-scale regions p__53543 state compatibilities msgs nodes graph cf map__53544 map__53546 meta53551])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, toggle-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/toggle-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__53256]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, make-node-types-cached-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 260, :column 7, :end-line 260, :end-column 39, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, :name dynomics.space.ui/make-node-types-cached-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 39, :method-params ([p__53423 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [id type]} owner])), :doc "Returns a node-type component for the node types palette,\n  which can prerender its SVG to a canvas & therefore\n  cache the resulting image, to save on components in the DOM if need be."}, make-trajectory-group {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 121, :column 7, :end-line 121, :end-column 28, :arglists (quote ([with-arrowhead trajectory]))}, :name dynomics.space.ui/make-trajectory-group, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 28, :method-params ([with-arrowhead trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists (quote ([with-arrowhead trajectory]))}, make-tools-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 239, :column 7, :end-line 239, :end-column 35, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, :name dynomics.space.ui/make-tools-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 35, :method-params ([p__53410]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-tool tools tools-order state-updates], :as state}])), :doc "Returns a palette of tools"}, make-node-types-palette-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 283, :column 7, :end-line 283, :end-column 40, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, :name dynomics.space.ui/make-node-types-palette-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 40, :method-params ([p__53434]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [component state-updates], :as state}])), :doc "Returns a component for the node types palette"}, ->t_dynomics$space$ui53528 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta53529])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53528, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta53529]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 401, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta53529])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, test-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 400, :column 7, :end-line 400, :end-column 21, :arglists (quote ([x]))}, :name dynomics.space.ui/test-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, t_dynomics$space$ui53521 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53521, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 346, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-prerender-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 478, :column 7, :end-line 478, :end-column 31, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, :name dynomics.space.ui/make-prerender-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 31, :method-params ([p__53562]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 478, :end-line 478, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions node-scale], :as space} :space, cf :cf, :as state}])), :doc "Returns a component for offscreen rendering"}, enable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/enable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 23, :method-params ([p__53266]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, spiral {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 168, :column 7, :end-line 168, :end-column 13, :arglists (quote ([samples expansion rotation] [start init-points samples expansion rotation])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/spiral, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists ([samples expansion rotation] [start init-points samples expansion rotation]), :arglists-meta (nil nil)}, :method-params ([samples expansion rotation] [start init-points samples expansion rotation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 5, :fn-var true, :arglists ([samples expansion rotation] [start init-points samples expansion rotation])}, t_dynomics$space$ui53426 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53426, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui53567 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__53562 selected-nodes make-prerender-component edges space map__53563 node-scale regions map__53564 state nodes cf meta53568])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53567, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([p__53562 selected-nodes make-prerender-component edges space map__53563 node-scale regions map__53564 state nodes cf meta53568]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 481, :max-fixed-arity 13, :fn-var true, :arglists (quote ([p__53562 selected-nodes make-prerender-component edges space map__53563 node-scale regions map__53564 state nodes cf meta53568])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53531 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53531, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 401, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui53431 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__53423 owner map__53429 id type meta53432])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53431, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__53423 owner map__53429 id type meta53432]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 265, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__53423 owner map__53429 id type meta53432])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53528 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53528, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 401, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-2 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 133, :column 7, :end-line 133, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-2, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, make-edge-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 305, :column 7, :end-line 305, :end-column 26, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, :name dynomics.space.ui/make-edge-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__53451]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 305, :end-line 305, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[[nid1 nid2] [nx1 ny1] [nx2 ny2] [cx1 cx2] [cy1 cy2]] :points, compatible? :compatible?, node-scale :node-scale}])), :doc "Returns a component for an edge"}, ->t_dynomics$space$ui53484 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x vec__53481 vec__53479 y vec__53476 p2 p4 p3 qx p__53474 qy vec__53480 p1 make-open-region-component cx cy node-id map__53475 quadrant-type map__53478 vec__53477 meta53485])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53484, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([x vec__53481 vec__53479 y vec__53476 p2 p4 p3 qx p__53474 qy vec__53480 p1 make-open-region-component cx cy node-id map__53475 quadrant-type map__53478 vec__53477 meta53485]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([x vec__53481 vec__53479 y vec__53476 p2 p4 p3 qx p__53474 qy vec__53480 p1 make-open-region-component cx cy node-id map__53475 quadrant-type map__53478 vec__53477 meta53485])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53567 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53567, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 481, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53445 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53445, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53496 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53496, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53550 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53550, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 419, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-space-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 414, :column 7, :end-line 414, :end-column 27, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, :name dynomics.space.ui/make-space-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 27, :method-params ([p__53543]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [nodes edges selected-nodes regions compatibilities graph node-scale], :as space} :space, cf :cf, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom, :as state}])), :doc "Returns a component for the phase-space editor"}, ->t_dynomics$space$ui53460 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 cx1 ny2 vec__53455 make-edge-component cy2 nx2 vec__53458 cy1 node-scale vec__53457 ny1 cx2 vec__53454 vec__53453 vec__53456 compatible? p__53451 map__53452 nid2 nid1 meta53461])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53460, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 cx1 ny2 vec__53455 make-edge-component cy2 nx2 vec__53458 cy1 node-scale vec__53457 ny1 cx2 vec__53454 vec__53453 vec__53456 compatible? p__53451 map__53452 nid2 nid1 meta53461]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 309, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 cx1 ny2 vec__53455 make-edge-component cy2 nx2 vec__53458 cy1 node-scale vec__53457 ny1 cx2 vec__53454 vec__53453 vec__53456 compatible? p__53451 map__53452 nid2 nid1 meta53461])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui53445 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__53434 map__53443 state component state-updates meta53446])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53445, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__53434 map__53443 state component state-updates meta53446]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 286, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__53434 map__53443 state component state-updates meta53446])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53559 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53559, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 419, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-4 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 149, :column 7, :end-line 149, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-4, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, ->t_dynomics$space$ui53471 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([nx1 vec__53466 cx1 vec__53468 ny2 vec__53469 make-edge-component cy2 nx2 map__53463 cy1 node-scale ny1 cx2 vec__53465 compatible? p__53451 vec__53467 vec__53464 nid2 nid1 meta53472])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53471, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([nx1 vec__53466 cx1 vec__53468 ny2 vec__53469 make-edge-component cy2 nx2 map__53463 cy1 node-scale ny1 cx2 vec__53465 compatible? p__53451 vec__53467 vec__53464 nid2 nid1 meta53472]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 309, :max-fixed-arity 22, :fn-var true, :arglists (quote ([nx1 vec__53466 cx1 vec__53468 ny2 vec__53469 make-edge-component cy2 nx2 map__53463 cy1 node-scale ny1 cx2 vec__53465 compatible? p__53451 vec__53467 vec__53464 nid2 nid1 meta53472])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53437 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53437, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 286, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53507 {:num-fields 19, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53507, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 346, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, saddle-3 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 141, :column 7, :end-line 141, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-3, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, make-paths {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 221, :column 7, :end-line 221, :end-column 17, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, :name dynomics.space.ui/make-paths, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 17, :method-params ([p__53397]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [nodes edges regions node-scale], :as space}]))}, make-node-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 339, :column 7, :end-line 339, :end-column 26, :arglists (quote ([{{[x y] :position, t :type, node-type :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, :name dynomics.space.ui/make-node-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([p__53499]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{[x y] :position, t :type, node-type :node-type, id :id, connections :connections} :node, node-scale :node-scale, selected-nodes :selected-nodes, {current-tool :current-tool} :component, msgs :msgs, pz :pan-zoom}])), :doc "Returns a component for a node and its connections"}, ->t_dynomics$space$ui53521 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool p__53499 map__53515 pz map__53517 path y map__53514 make-node-component vec__53516 node-scale node-type msgs id meta53522])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53521, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool p__53499 map__53515 pz map__53517 path y map__53514 make-node-component vec__53516 node-scale node-type msgs id meta53522]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 346, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool p__53499 map__53515 pz map__53517 path y map__53514 make-node-component vec__53516 node-scale node-type msgs id meta53522])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, to-coords {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([element-id] [svg-element element])), :doc "Returns a function that converts local coords to\n  those of the given element-id's", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/to-coords, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([element-id] [svg-element element]), :arglists ([element-id] [svg-element element]), :arglists-meta (nil nil)}, :method-params ([element-id] [svg-element element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists ([element-id] [svg-element element]), :doc "Returns a function that converts local coords to\n  those of the given element-id's"}, ->t_dynomics$space$ui53559 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([selected-nodes current-tool edges pz map__53553 make-space-component space map__53555 node-scale regions p__53543 state compatibilities msgs nodes graph cf map__53554 meta53560])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53559, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([selected-nodes current-tool edges pz map__53553 make-space-component space map__53555 node-scale regions p__53543 state compatibilities msgs nodes graph cf map__53554 meta53560]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 419, :max-fixed-arity 19, :fn-var true, :arglists (quote ([selected-nodes current-tool edges pz map__53553 make-space-component space map__53555 node-scale regions p__53543 state compatibilities msgs nodes graph cf map__53554 meta53560])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, render-to-image {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 67, :column 7, :end-line 67, :end-column 22, :arglists (quote ([] [id])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name dynomics.space.ui/render-to-image, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists ([] [id])}, saddle-5 {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 158, :column 7, :end-line 158, :end-column 15, :arglists (quote ([start init-points samples]))}, :name dynomics.space.ui/saddle-5, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 15, :method-params ([start init-points samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([start init-points samples]))}, t_dynomics$space$ui53574 {:num-fields 13, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53574, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 481, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, disable-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 61, :column 7, :end-line 61, :end-column 24, :arglists (quote ([{pz :pan-zoom}]))}, :name dynomics.space.ui/disable-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 24, :method-params ([p__53261]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pz :pan-zoom}]))}, t_dynomics$space$ui53471 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53471, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 309, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_dynomics$space$ui53460 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53460, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 3, :line 309, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-prerender-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 201, :column 7, :end-line 201, :end-column 26, :arglists (quote ([id type]))}, :name dynomics.space.ui/make-prerender-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 26, :method-params ([id type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id type]))}, ->t_dynomics$space$ui53507 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([t connections x selected-nodes current-tool p__53499 pz path y map__53501 make-node-component map__53500 node-scale map__53503 node-type vec__53502 msgs id meta53508])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53507, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([t connections x selected-nodes current-tool p__53499 pz path y map__53501 make-node-component map__53500 node-scale map__53503 node-type vec__53502 msgs id meta53508]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 346, :max-fixed-arity 19, :fn-var true, :arglists (quote ([t connections x selected-nodes current-tool p__53499 pz path y map__53501 make-node-component map__53500 node-scale map__53503 node-type vec__53502 msgs id meta53508])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui53531 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([test-component x meta53532])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53531, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([test-component x meta53532]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 401, :max-fixed-arity 3, :fn-var true, :arglists (quote ([test-component x meta53532])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-handler {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, :name dynomics.space.ui/make-handler, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 19, :method-params ([transform type-key p__53365]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 3, :fn-var true, :arglists (quote ([transform type-key {msgs :msgs, current-tool :current-tool, :as s}])), :doc "Returns an event handler for the given event type,\n  sending the event on the message-channel\n  "}, t_dynomics$space$ui53431 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53431, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 4, :line 265, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-open-region-component {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 321, :column 7, :end-line 321, :end-column 33, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, :name dynomics.space.ui/make-open-region-component, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 33, :method-params ([p__53474]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{node-id :node-id, quadrant-type :quadrant-type, [qx qy] :quadrant-vector, [p1 p2 {[x y] :point, [[cx cy]] :control-points, :as p3} p4] :points}]))}, ->t_dynomics$space$ui53574 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([p__53562 selected-nodes make-prerender-component edges space node-scale regions map__53571 state map__53570 nodes cf meta53575])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53574, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([p__53562 selected-nodes make-prerender-component edges space node-scale regions map__53571 state map__53570 nodes cf meta53575]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 481, :max-fixed-arity 13, :fn-var true, :arglists (quote ([p__53562 selected-nodes make-prerender-component edges space node-scale regions map__53571 state map__53570 nodes cf meta53575])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-icon-fn {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 178, :column 7, :end-line 178, :end-column 18, :arglists (quote ([type-id]))}, :name dynomics.space.ui/get-icon-fn, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 18, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, make-type-icon {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 193, :column 7, :end-line 193, :end-column 21, :arglists (quote ([type-id]))}, :name dynomics.space.ui/make-type-icon, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 21, :method-params ([type-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type-id]))}, ->t_dynomics$space$ui53496 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([x y p2 vec__53491 p4 p3 qx p__53474 map__53490 qy vec__53493 vec__53488 vec__53492 p1 map__53487 make-open-region-component vec__53489 cx cy node-id quadrant-type meta53497])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53496, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([x y p2 vec__53491 p4 p3 qx p__53474 map__53490 qy vec__53493 vec__53488 vec__53492 p1 map__53487 make-open-region-component vec__53489 cx cy node-id quadrant-type meta53497]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 325, :max-fixed-arity 22, :fn-var true, :arglists (quote ([x y p2 vec__53491 p4 p3 qx p__53474 map__53490 qy vec__53493 vec__53488 vec__53492 p1 map__53487 make-open-region-component vec__53489 cx cy node-id quadrant-type meta53497])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, arrowhead {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 107, :column 7, :end-line 107, :end-column 16, :arglists (quote ([trajectory]))}, :name dynomics.space.ui/arrowhead, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 16, :method-params ([trajectory]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([trajectory]))}, ->t_dynomics$space$ui53437 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-palette-component p__53434 map__53435 state component state-updates meta53438])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53437, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-palette-component p__53434 map__53435 state component state-updates meta53438]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 286, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-palette-component p__53434 map__53435 state component state-updates meta53438])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_dynomics$space$ui53426 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([make-node-types-cached-component p__53423 owner map__53424 id type meta53427])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name dynomics.space.ui/->t_dynomics$space$ui53426, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :method-params ([make-node-types-cached-component p__53423 owner map__53424 id type meta53427]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 4, :factory :positional, :line 265, :max-fixed-arity 7, :fn-var true, :arglists (quote ([make-node-types-cached-component p__53423 owner map__53424 id type meta53427])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-quadrant-gradients {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 403, :column 7, :end-line 403, :end-column 30, :arglists (quote ([]))}, :name dynomics.space.ui/make-quadrant-gradients, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 403, :end-line 403, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t_dynomics$space$ui53484 {:num-fields 22, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name dynomics.space.ui/t_dynomics$space$ui53484, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :type true, :anonymous true, :column 5, :line 325, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-pan-zoom! {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([pz] [])), :doc "Adds a panzoom object to the space", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}}, :name dynomics.space.ui/add-pan-zoom!, :variadic false, :file "/Users/onto/projects/Dynomics/src/dynomics/space/ui.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([pz] []), :arglists ([pz] []), :arglists-meta (nil nil)}, :method-params ([pz] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([pz] []), :doc "Adds a panzoom object to the space"}}, :require-macros {dommy dommy.core, dommy.core dommy.core, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:y :description :path nx1 t connections x p__53562 make-node-types-cached-component :state-updates meta53427 selected-nodes make-node-types-palette-component test-component meta53432 :r :space :js vec__53466 map__53443 make-prerender-component :fn cx1 current-tool edges owner vec__53468 :stability meta53508 ny2 :verb p__53499 vec__53455 map__53515 :key pz map__53517 :dont-record :pan-zoom meta53529 map__53553 vec__53481 path vec__53479 y :mouse-up vec__53469 vec__53476 state-updates p2 vec__53491 :name :as :node-scale meta53522 make-edge-component meta53472 map__53501 p4 :fill p3 :dataurl :tools make-space-component space :functions :regions :tool map__53514 map__53555 :width :control-points cy2 qx :cursor :type p__53474 nx2 :points map__53563 meta53568 make-node-component vec__53458 vec__53516 :icon map__53500 :node :node-type :component :node-types :s map__53463 :maxZoom cy1 :compatible? :mouse-down map__53490 map__53545 node-scale :compatibilities :tools-order :ml vec__53457 ny1 regions cx2 vec__53454 vec__53453 map__53571 vec__53465 map__53564 :keys :event :dynomics :msgs :nodes p__53423 qy meta53485 map__53503 p__53543 :ui vec__53493 type vec__53456 vec__53480 :node-id :id state vec__53488 meta53575 node-type component vec__53492 :graph p1 compatible? map__53487 :cf vec__53502 :quadrant-type meta53560 p__53451 meta53532 compatibilities :quadrant-vector :position map__53570 :f make-open-region-component :action :point meta53438 map__53429 :mouse-move :t :connections :x p__53434 vec__53467 :minZoom vec__53464 :selected-nodes quote :set msgs nodes vec__53489 :arglists meta53446 cx meta53551 id :keybinding cy node-id :doc map__53452 graph map__53475 map__53424 meta53497 cf quadrant-type nid2 :current-tool map__53554 :edges map__53544 meta53461 map__53546 nid1 map__53478 :height :select vec__53477 map__53435}, :order [:minZoom :maxZoom :pan-zoom :msgs :current-tool :verb :type :position :event :t :s :r :f :points :js :x :y :width :height :fill :nodes :edges :regions :node-scale :connections :tools :tools-order :state-updates :description :icon :keybinding :fn :action :ui :functions :dynomics :dont-record :select :tool :name :id :dataurl make-node-types-cached-component :arglists :doc quote :keys id type owner p__53423 map__53424 meta53427 map__53429 meta53432 :component :stability :node-types :set :node-type :key make-node-types-palette-component :as component state-updates state p__53434 map__53435 meta53438 map__53443 meta53446 :compatible? nx1 cx1 ny2 vec__53455 make-edge-component nid1 nid2 ny1 nx2 cx2 cy1 cy2 compatible? node-scale vec__53458 vec__53457 vec__53454 vec__53453 vec__53456 p__53451 map__53452 meta53461 vec__53466 vec__53468 vec__53469 map__53463 vec__53465 vec__53467 vec__53464 meta53472 :node-id :quadrant-type :quadrant-vector :point :control-points :ml x vec__53481 vec__53479 y vec__53476 p2 p4 p3 qx p__53474 qy vec__53480 p1 make-open-region-component node-id quadrant-type cx cy map__53475 map__53478 vec__53477 meta53485 vec__53491 map__53490 vec__53493 vec__53488 vec__53492 map__53487 vec__53489 meta53497 :node :selected-nodes :space :mouse-down :path :mouse-up t connections selected-nodes current-tool p__53499 pz path map__53501 make-node-component node-type msgs map__53500 map__53503 vec__53502 meta53508 map__53515 map__53517 map__53514 vec__53516 meta53522 test-component meta53529 meta53532 :compatibilities :graph :cf :mouse-move :cursor edges make-space-component nodes regions compatibilities graph space cf map__53545 p__53543 map__53544 map__53546 meta53551 map__53553 map__53555 map__53554 meta53560 p__53562 make-prerender-component map__53563 map__53564 meta53568 map__53571 map__53570 meta53575]}, :doc "\n  This namespace provides components\n  for making the main space UI\n\n  Currently this is implemented with Om/React\n  and SVG, because that was the fastest way\n  to do it. We could move to Canvas or I'm\n  thinking maybe WebGL in future.\n\n  "}