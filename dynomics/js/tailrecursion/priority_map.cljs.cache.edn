;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name tailrecursion.priority-map, :imports nil, :requires {core cljs.core, cljs.core cljs.core, cljs.reader cljs.reader}, :uses {reader-error cljs.reader, register-tag-parser! cljs.reader}, :defs {PersistentPriorityMap {:num-fields 5, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name tailrecursion.priority-map/PersistentPriorityMap, :file "public/js/tailrecursion/priority_map.cljs", :end-column 31, :type true, :column 10, :line 7, :record false, :end-line 7, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->PersistentPriorityMap {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 7, :column 10, :end-line 7, :end-column 31, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :factory :positional, :arglists (quote ([priority->set-of-items item->priority meta keyfn __hash]))}, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name tailrecursion.priority-map/->PersistentPriorityMap, :variadic false, :file "public/js/tailrecursion/priority_map.cljs", :end-column 31, :method-params ([priority->set-of-items item->priority meta keyfn __hash]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 5, :fn-var true, :arglists (quote ([priority->set-of-items item->priority meta keyfn __hash])), :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, pm-empty-by {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 176, :column 8, :end-line 176, :end-column 19, :private true, :arglists (quote ([comparator]))}, :private true, :name tailrecursion.priority-map/pm-empty-by, :variadic false, :file "public/js/tailrecursion/priority_map.cljs", :end-column 19, :method-params ([comparator]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comparator]))}, pm-empty-keyfn {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 179, :column 8, :end-line 179, :end-column 22, :private true, :arglists (quote ([keyfn] [keyfn comparator])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([keyfn] [keyfn comparator]), :arglists ([keyfn] [keyfn comparator]), :arglists-meta (nil nil)}}, :private true, :name tailrecursion.priority-map/pm-empty-keyfn, :variadic false, :file "public/js/tailrecursion/priority_map.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([keyfn] [keyfn comparator]), :arglists ([keyfn] [keyfn comparator]), :arglists-meta (nil nil)}, :method-params ([keyfn] [keyfn comparator]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists ([keyfn] [keyfn comparator])}, read-priority-map {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 183, :column 8, :end-line 183, :end-column 25, :private true, :arglists (quote ([elems]))}, :private true, :name tailrecursion.priority-map/read-priority-map, :variadic false, :file "public/js/tailrecursion/priority_map.cljs", :end-column 25, :method-params ([elems]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elems]))}, priority-map {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 190, :column 7, :end-line 190, :end-column 19, :arglists (quote ([& keyvals])), :doc "keyval => key val\n  Returns a new priority map with supplied mappings.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(keyvals)], :arglists ([& keyvals]), :arglists-meta (nil)}}, :name tailrecursion.priority-map/priority-map, :variadic true, :file "public/js/tailrecursion/priority_map.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(keyvals)], :arglists ([& keyvals]), :arglists-meta (nil)}, :method-params [(keyvals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 0, :fn-var true, :arglists ([& keyvals]), :doc "keyval => key val\n  Returns a new priority map with supplied mappings."}, priority-map-by {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 199, :column 7, :end-line 199, :end-column 22, :arglists (quote ([comparator & keyvals])), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied comparator.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(comparator keyvals)], :arglists ([comparator & keyvals]), :arglists-meta (nil)}}, :name tailrecursion.priority-map/priority-map-by, :variadic true, :file "public/js/tailrecursion/priority_map.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(comparator keyvals)], :arglists ([comparator & keyvals]), :arglists-meta (nil)}, :method-params [(comparator keyvals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists ([comparator & keyvals]), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied comparator."}, priority-map-keyfn {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 209, :column 7, :end-line 209, :end-column 25, :arglists (quote ([keyfn & keyvals])), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied keyfn.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(keyfn keyvals)], :arglists ([keyfn & keyvals]), :arglists-meta (nil)}}, :name tailrecursion.priority-map/priority-map-keyfn, :variadic true, :file "public/js/tailrecursion/priority_map.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(keyfn keyvals)], :arglists ([keyfn & keyvals]), :arglists-meta (nil)}, :method-params [(keyfn keyvals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists ([keyfn & keyvals]), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied keyfn."}, priority-map-keyfn-by {:protocol-inline nil, :meta {:file "/Users/onto/projects/Dynomics/public/js/tailrecursion/priority_map.cljs", :line 219, :column 7, :end-line 219, :end-column 28, :arglists (quote ([keyfn comparator & keyvals])), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied keyfn and comparator.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(keyfn comparator keyvals)], :arglists ([keyfn comparator & keyvals]), :arglists-meta (nil)}}, :name tailrecursion.priority-map/priority-map-keyfn-by, :variadic true, :file "public/js/tailrecursion/priority_map.cljs", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(keyfn comparator keyvals)], :arglists ([keyfn comparator & keyvals]), :arglists-meta (nil)}, :method-params [(keyfn comparator keyvals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 2, :fn-var true, :arglists ([keyfn comparator & keyvals]), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied keyfn and comparator."}}, :require-macros {coreclj cljs.core, cljs.core cljs.core}, :cljs.analyzer/constants {:seen #{:tailrecursion.priority-map/not-found priority->set-of-items __hash meta keyfn item->priority :mutable}, :order [:tailrecursion.priority-map/not-found priority->set-of-items item->priority meta keyfn __hash :mutable]}, :doc nil}